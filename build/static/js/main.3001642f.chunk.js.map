{"version":3,"sources":["services/data.js","components/assets.jsx","components/widgets/util.jsx","components/widgets/DoughnutChart.js","components/Dashboard.jsx","components/widgets/LineChart.js","components/widgets/Dialog.jsx","components/transactions.jsx","components/asset.jsx","components/navbar.jsx","components/Container.jsx","components/widgets/input.jsx","components/login.jsx","components/widgets/form.jsx","components/protectedRoute.jsx","index.js"],"names":["http","interceptors","request","use","config","headers","localStorage","getItem","error","Promise","reject","response","status","apiEndPoint","login","_x","_login","apply","this","arguments","_callee","credentials","result","regenerator_default","a","wrap","_context","prev","next","post","sent","data","setItem","username","token","toString","abrupt","stop","getAssets","_getAssets","_callee2","_ref","_context2","get","assets","t0","getbatchAssetHistory","_x2","_getbatchAssetHistory","_callee3","id","_ref2","_context3","qtyHistory","updateAsset","_x3","_x4","_x5","_updateAsset","_callee4","asset","amount","_context4","assetUpdateParameterGenrator","assetUpdater","editLabelsTransaction","_x6","_editLabelsTransaction","_callee5","obj","_context5","_callee6","arr","i","res","_context6","length","url","body","push","toast","success","field","toUpperCase","property","info","newAsset","oldAmount","Object","keys","map","key","slice","objKey","Math","abs","concat","defineProperty","getAsset","_x10","_getAsset","_callee7","_ref3","_context7","getAssetHistory","_x11","_getAssetHistory","_callee8","_context8","history","recentTransactions","_recentTransactions","_callee9","_ref4","_context9","Assets","state","assetHistory","active","getHistory","e","assetId","persist","_this","setState","show","target","props","react_default","createElement","Link","to","pathname","search","assetType","className","description","quantity","timeLastUpdated","LoadingOverlay_default","spinner","styles","base","objectSpread","width","height","top","& svg circle","stroke","tableClasses","scope","displayTableBody","Component","generateColor","num","undefined","randomColor","seed","random","luminosity","shadeChecker","clr1","clr2","displayTransactions","date","timestamp","tempDate","Date","getMonth","getDate","getFullYear","dateCreator","Fragment","style","textAlign","marginBottom","background","user","newLabels","label","index","transactionType","newThreshold","oldThreshold","oldDescription","newDescription","oldLocation","newLocation","assignee","oldComment","newComment","DoughnutChart","chartPieces","nextProps","_this2","labels","colors","color","indexOf","splice","generateColors","s","highlight","value","react_chartjs","options","title","display","text","legend","position","animationEasing","showTooltips","responsive","tooltipTitleFontColor","percentageInnerCutout","maintainAspectRatio","React","App","lowInventory","recents","singleAssets","batchAssets","batches","singles","filter","recent","forEach","checkLowInvenntory","widgets_DoughnutChart","batch","float","components_assets","LineChart","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","datasets","fillColor","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","batchHistory","getBatchData","labelsAndData","toLocaleString","month","animationSteps","bezierCurve","steppedLine","scaleShowGridLines","scaleShowVerticalLines","FormDialog","open","button","Dialog_default","onClose","onClick","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","fields","TextField_default","margin","toLowerCase","type","defaultValue","fullWidth","hidden","onChange","DialogActions_default","Button_default","onSubmit","submitButtonTitle","Transactions","maxHeight","overflowY","marginTop","zIndex","reverse","Asset","showDialog","forLabels","temp","tempLabel","anchorEl","handleClickOpen","handleClose","handleChange","name","event","handleSubmit","asyncToGenerator","mark","getAssetsData","qs","location","match","params","val","console","log","mode","oldAsset","JSON","parse","stringify","tempObj","warning","toConsumableArray","_this3","variant","goBack","index_es","threshold","justifyContent","Dialog_FormDialog","size","generateFields","Chip_default","deleteIcon","onDelete","editLabels","openFormDialog","widgets_LineChart","transactions_Transactions","Navbar","handleClick","currentTarget","removeItem","window","reload","textDecoration","right","aria-owns","aria-haspopup","Menu_default","Boolean","MenuItem_default","getUsername","logout","withRouter","Container","children","Input","htmlFor","Login","password","errors","failed","schema","Joi","string","required","doSubmit","replace","renderInput","renderSubmitButton","validateProperty","validate","details","message","abortEarly","path","input","errorMsg","preventDefault","classes","widgets_input","genres","genre","g","_id","disabled","ProtectedRoute","component","render","rest","objectWithoutProperties","Route","assign","isLoggedIn","Redirect","ReactDOM","react","HashRouter","lib","navbar","components_Container","Switch","protectedRoute","Dashboard","document","getElementById"],"mappings":"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","file":"static/js/main.3001642f.chunk.js","sourcesContent":["import http from \"axios\";\nimport { toast } from \"react-toastify\";\n\nhttp.interceptors.request.use(\n  config => {\n    config.headers[\"X-Access-Token\"] = localStorage.getItem(\"labId\");\n    return config;\n  },\n  error => Promise.reject(error)\n);\n\nhttp.interceptors.response.use(null, error => {\n  if (\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status <= 500\n  ) {\n    return Promise.reject(error);\n  }\n});\nconst apiEndPoint = \"http://ec2-54-89-116-114.compute-1.amazonaws.com:\";\n\nexport function getToken() {\n  if (localStorage.getItem(\"labId\")) {\n    return localStorage.getItem(\"labId\");\n  }\n  return null;\n}\n\nexport function isLoggedIn() {\n  if (localStorage.getItem(\"labId\")) {\n    return true;\n  }\n}\n\nexport async function login(credentials) {\n  const result = await http.post(apiEndPoint + \"8080/login/\", credentials);\n\n  if (result.data) {\n    localStorage.setItem(\"username\", credentials.username);\n    localStorage.setItem(\"labId\", result.data.token.toString());\n    return true;\n  }\n  return false;\n}\n\nexport async function getAssets() {\n  try {\n    const { data } = await http.get(apiEndPoint + \"8080/assets\");\n    return data.assets;\n  } catch (ex) {\n    return ex;\n  }\n}\n\nexport async function getbatchAssetHistory(id) {\n  try {\n    const { data } = await http.get(\n      apiEndPoint + \"8080/batchAssetQuantityHistory/\" + id\n    );\n    return data.qtyHistory;\n  } catch (ex) {\n    return ex;\n  }\n}\n\nexport async function updateAsset(id, asset, amount) {\n  const assets = assetUpdateParameterGenrator(id, asset, amount);\n  const i = 0;\n  try {\n    return await assetUpdater([], i, assets);\n  } catch (ex) {\n    return ex;\n  }\n}\n\nexport async function editLabelsTransaction(obj) {\n  // try {\n  //   const {data}= await http.post(\n  //     apiEndPoint + \"80/api/AssetEditLabelsTransaction/\",\n  //     obj\n  //   );\n  //   return data;\n  // } catch (ex) {\n  //   return ex;\n  // }\n\n  return await http.post(\n    apiEndPoint + \"80/api/AssetEditLabelsTransaction/\",\n    obj\n  );\n}\n\nasync function assetUpdater(arr, i, assets) {\n  while (i < assets.length) {\n    try {\n      let res = await http.post(assets[i].url, assets[i].body);\n      arr.push(res);\n      toast.success(\n        assets[i].field.toUpperCase() + \"  was updated successfully.\"\n      );\n    } catch (ex) {\n      toast.error(\"Unable update \" + assets[i].property + \".Pleasd try again.\");\n    }\n    i++;\n  }\n  toast.info(\"Updating transaction history\");\n\n  return arr;\n}\n\nfunction assetUpdateParameterGenrator(id, newAsset, oldAmount) {\n  const arr = [];\n  Object.keys(newAsset).map(key => {\n    let property = \"Edit\" + key[0].toUpperCase() + key.slice(1);\n    let objKey = \"new\" + key[0].toUpperCase() + key.slice(1);\n    let url = \"\";\n\n    if (key === \"status\") {\n      property = \"Move\";\n      objKey = \"newLocation\";\n    } else if (key === \"quantity\") {\n      if (newAsset[key] - oldAmount > 0) {\n        property = \"Addition\";\n        objKey = \"amount\";\n      } else {\n        property = \"Subtraction\";\n        objKey = \"amount\";\n      }\n      newAsset[key] = Math.abs(newAsset[key] - oldAmount);\n    }\n    url = `${apiEndPoint}80/api/Asset${property}Transaction`;\n    arr.push({\n      body: { asset: id, [objKey]: newAsset[key] },\n      url,\n      property,\n      field: key\n    });\n  });\n  return arr;\n}\n\nexport async function getAsset(id) {\n  try {\n    const { data } = await http.get(apiEndPoint + \"80/api/LabAsset/\" + id);\n\n    if (data) return data;\n    return [];\n  } catch (ex) {\n    return ex;\n  }\n}\n\nexport async function getAssetHistory(id) {\n  try {\n    const res = await http.get(apiEndPoint + \"8080/assetHistory/\" + id);\n    const { data } = res;\n\n    if (data && data.history) return data.history;\n    return [];\n  } catch (ex) {\n    return ex;\n  }\n}\n\nexport async function recentTransactions() {\n  try {\n    const { data } = await http.get(apiEndPoint + \"8080/recentTransactions/\");\n\n    if (data && data.history) return data.history;\n    return [];\n  } catch (ex) {\n    return ex;\n  }\n}\n","import React, { Component } from \"react\";\nimport { getAssets, getAssetHistory } from \"../services/data\";\nimport { Link } from \"react-router-dom\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { toast } from \"react-toastify\";\n\nclass Assets extends Component {\n  state = {\n    assets: [],\n    assetHistory: [],\n    active: false\n  };\n\n  async componentWillMount() {\n    if (!this.props.assets) {\n      const assets = await getAssets();\n      // const assetHistory = await getAssetHistory(assetId);\n      this.setState({ assets });\n    }\n  }\n  getHistory = async (e, asset, assetId) => {\n    e.persist();\n    this.setState({ active: true });\n    try {\n      const assetHistory = await getAssetHistory(assetId);\n      if (assetHistory && this.state.assetHistory.length <= 1) {\n        this.setState({ assetHistory, active: false });\n        asset.show(e, e.target);\n      }\n    } catch (ex) {\n      toast.error(\"Server is unavailable. Please check later.\");\n    }\n  };\n\n  displayTableBody(assets) {\n    if (!assets) {\n      return assets.map((a, i) => (\n        <tr key={a.assetId}>\n          <td />\n          <td />\n          <td>Assets are unavailable</td>\n          <td />\n          <td />\n          <td />\n        </tr>\n      ));\n    }\n    return assets.map((a, i) => (\n      <tr key={a.assetId}>\n        <td>\n          <Link\n            to={{\n              pathname: `/asset/${a.assetId}`,\n              search: `?type=${a.assetType}`,\n              state: a\n            }}\n            className=\"badge badge-secondary\"\n          >\n            {a.assetId}\n          </Link>\n        </td>\n        <td>{a.assetType}</td>\n        <td>\n          {/* {this.state.assetHistory.map((h, i) => (\n            <p key={i}>{h.description}</p>\n          ))} */}\n          {a.description.slice(0, 15) + \"...\"}\n        </td>\n        <td>{a.quantity || 1}</td>\n        <td>{a.status}</td>\n        <td>{a.timeLastUpdated.slice(0, 10)}</td>\n      </tr>\n    ));\n  }\n\n  render() {\n    return (\n      <LoadingOverlay\n        active={this.state.active}\n        // className=\"_loading_overlay_overlay\"\n        spinner\n        styles={{\n          spinner: base => ({\n            ...base,\n            width: \"100px\",\n            height: \"100px\",\n            top: \"-150px\",\n            \"& svg circle\": {\n              stroke: \"#0F6FA6\"\n            }\n          })\n        }}\n      >\n        <div className={this.props.tableClasses}>\n          <table\n            className={\n              \"rounded table tableFixHead table-striped\" +\n              (!this.props.tableClasses ? \" b-raised\" : \"\")\n            }\n          >\n            <thead>\n              <tr>\n                <th scope=\"col\">ID</th>\n                <th scope=\"col\">Type</th>\n                <th scope=\"col\">Description</th>\n                <th scope=\"col\">Quantity</th>\n                <th scope=\"col\">Location</th>\n                <th scope=\"col\">Last Updated</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.assets\n                ? this.displayTableBody(this.props.assets)\n                : this.displayTableBody(this.state.assets)}\n            </tbody>\n          </table>\n        </div>\n      </LoadingOverlay>\n    );\n  }\n}\n\nexport default Assets;\n","import { randomColor } from \"randomcolor\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport function dateCreator(timestamp) {\n  let tempDate = new Date(timestamp);\n\n  return (\n    (\"0\" + (tempDate.getMonth() + 1)).slice(-2) +\n    \"/\" +\n    (\"0\" + tempDate.getDate()).slice(-2) +\n    \"/\" +\n    tempDate.getFullYear()\n  );\n}\n\nexport function getColor(count, hue) {\n  const shade = [\n    \"#3366CC\",\n    \"#3366FF\",\n    \"#0066FF\",\n    \"#0066CC\",\n    \"#667099\",\n    \"#660066\",\n    \"#660033\",\n    \"#663300\",\n    \"#663333\",\n    \"#339900\",\n    \"#CC9900\",\n    \"#FFCC33\",\n    \"#FFC300\"\n  ];\n  // const hue = shade[Math.floor(Math.random() * shade.length)];\n  // console.log(hue);\n  // 009900;\n\n  return randomColor({\n    count,\n    seed: \"#0066CC\",\n    luminosity: \"bright\"\n  })[0];\n}\n\nexport function generateColors(num) {\n  let colors = [];\n  let i = 0;\n  let color = null;\n\n  while (colors.length < num) {\n    color = generateColor(colors.length, \"orange\");\n    if (colors.length === 0) colors.push(color);\n    if (colors.indexOf(color) < 0) {\n      if (shadeChecker(colors[i], color)) {\n        colors.push(color);\n        i++;\n      }\n    }\n  }\n  colors.splice(1, 1, \"#1040B8\");\n  colors.splice(colors.length - 1, 1, \"#007f0e\");\n  return colors;\n}\n\nfunction generateColor(num, hue = \"random\") {\n  return randomColor({\n    seed: num + Math.random,\n    luminosity: \"bright\"\n  });\n}\n\nfunction shadeChecker(clr1, clr2) {\n  if (clr1.slice(0, 3) !== clr2.slice(0, 3)) return true;\n}\n\nexport function getUsername() {\n  const user = localStorage.getItem(\"username\");\n\n  if (user) {\n    return user.slice(0, 1).toUpperCase() + user.slice(1);\n  }\n  return null;\n}\n\nexport function displayTransactions(asset, i, assetId = \"null\") {\n  const date = dateCreator(asset.timestamp);\n\n  if (asset[\"transactionClass\"] === \"AssetEditLabelsTransaction\") {\n    return (\n      <React.Fragment key={i}>\n        <div\n          style={{\n            textAlign: \"center\",\n            marginBottom: \"10px\",\n            background: \"linearGradient(to right, red, yellow)\"\n          }}\n        >\n          Asset {\" -  \"}\n          <Link\n            to={{\n              pathname: `/asset/${asset.assetId ? asset.assetId : assetId}`,\n              search: `?type=${asset.assetType}`,\n              state: asset\n            }}\n            className=\"field-purple\"\n          >\n            {asset.assetId ? asset.assetId : assetId}\n          </Link>\n          <hr />\n        </div>\n\n        <span className=\"m-5 \">\n          <span className=\"field-blue\">Labels were updated</span> on\n          {\" \" + date} by{\" \"}\n          <span className=\"field-blue mb-10\">{\" \" + asset.user}</span>\n        </span>\n        <span />\n        {/* <span className=\"d-block\">\n          {asset.oldLabels.length > 0 && \"Old Labels: \"}\n          {asset.oldLabels.length > 0 &&\n            asset.oldLabels.map((label, index) => (\n              <span key={index}>{\" \" + label + \", \"}</span>\n            ))}\n        </span> */}\n        <span className=\"d-block\">\n          {asset.newLabels.length > 0 && \"New Labels:\"}\n          {asset.newLabels.length > 0 &&\n            asset.newLabels.map((label, index) =>\n              index !== asset.newLabels.length - 1 ? (\n                <span key={index}>{\" \" + label + \", \"}</span>\n              ) : (\n                <span key={index}>{\" \" + label}</span>\n              )\n            )}\n        </span>\n      </React.Fragment>\n    );\n  } else if (asset[\"transactionClass\"] === \"AssetAdditionTransaction\") {\n    return (\n      <React.Fragment key={i}>\n        <div\n          style={{\n            textAlign: \"center\",\n            marginBottom: \"10px\",\n            background: \"linearGradient(to right, red, yellow)\"\n          }}\n        >\n          Asset {\" -  \"}\n          <Link\n            to={{\n              pathname: `/asset/${asset.assetId ? asset.assetId : assetId}`,\n              search: `?type=${asset.assetType}`,\n              state: asset\n            }}\n            className=\"field-purple\"\n          >\n            {asset.assetId ? asset.assetId : assetId}\n          </Link>\n          <hr />\n        </div>\n\n        <span className=\"m-5 \">\n          <span className=\"field-green\">{asset.transactionType} on</span>\n          {\" \" + date} by{\" \"}\n          <span className=\"field-blue mb-10\">{\" \" + asset.user}</span>\n        </span>\n        <span />\n        <span className=\"d-block\">\n          Old Amount:\n          {\" \" + asset.oldAmount}\n        </span>\n        <span className=\"d-block\">\n          New Amount:\n          {\" \" + asset.amount}\n        </span>\n      </React.Fragment>\n    );\n  } else if (asset[\"transactionClass\"] === \"AssetSubtractionTransaction\") {\n    return (\n      <React.Fragment key={i}>\n        <div\n          style={{\n            textAlign: \"center\",\n            marginBottom: \"10px\",\n            background: \"linearGradient(to right, red, yellow)\"\n          }}\n        >\n          Asset {\" -  \"}\n          <Link\n            to={{\n              pathname: `/asset/${asset.assetId ? asset.assetId : assetId}`,\n              search: `?type=${asset.assetType}`,\n              state: asset\n            }}\n            className=\"field-purple\"\n          >\n            {asset.assetId ? asset.assetId : assetId}\n          </Link>\n          <hr />\n        </div>\n\n        <span className=\"m-5 \">\n          <span className=\"field-warning\">{asset.transactionType} on</span>\n          {\" \" + date} by{\" \"}\n          <span className=\"field-blue mb-10\">{\" \" + asset.user}</span>\n        </span>\n        <span />\n        <span className=\"d-block\">\n          Old Amount:\n          {\" \" + asset.oldAmount}\n        </span>\n        <span className=\"d-block\">\n          New Amount:\n          {\" \" + asset.amount}\n        </span>\n      </React.Fragment>\n    );\n  } else if (asset[\"transactionClass\"] === \"AssetCreateTransaction\") {\n    return (\n      <React.Fragment key={i}>\n        <div\n          style={{\n            textAlign: \"center\",\n            marginBottom: \"10px\",\n            background: \"linearGradient(to right, red, yellow)\"\n          }}\n        >\n          Asset {\" -  \"}\n          <Link\n            to={{\n              pathname: `/asset/${asset.assetId ? asset.assetId : assetId}`,\n              search: `?type=${asset.assetType}`,\n              state: asset\n            }}\n            className=\"field-purple\"\n          >\n            {asset.assetId ? asset.assetId : assetId}\n          </Link>\n          <hr />\n        </div>\n\n        <span className=\"m-5 \">\n          <span className=\"field-green\">A new Asset was created</span> on{\" \"}\n          {\" \" + date} by{\" \"}\n          <span className=\"field-blue mb-10\">{\" \" + asset.user}</span>\n        </span>\n        <span />\n        <span className=\"d-block\">\n          Asset Type:\n          {\" \" + asset.assetType}\n        </span>\n        <span className=\"d-block\">\n          Asset Description:\n          {\" \" + asset.description}\n        </span>\n      </React.Fragment>\n    );\n  } else if (asset[\"transactionClass\"] === \"AssetEditThresholdTransaction\") {\n    return (\n      <React.Fragment key={i}>\n        <div\n          style={{\n            textAlign: \"center\",\n            marginBottom: \"10px\",\n            background: \"linearGradient(to right, red, yellow)\"\n          }}\n        >\n          Asset {\" -  \"}\n          <Link\n            to={{\n              pathname: `/asset/${asset.assetId ? asset.assetId : assetId}`,\n              search: `?type=${asset.assetType}`,\n              state: asset\n            }}\n            className=\"field-purple\"\n          >\n            {asset.assetId ? asset.assetId : assetId}\n          </Link>\n          <hr />\n        </div>\n\n        <span className=\"m-5 \">\n          <span className=\"field-red\">Low inventory update</span>\n          {\" \" + date} by{\" \"}\n          <span className=\"field-blue mb-10\">{\" \" + asset.user}</span>\n        </span>\n        <span />\n        <span className=\"d-block\">\n          Threshold:\n          {\" \" + asset.newThreshold}\n        </span>\n        <span className=\"d-block\">\n          Actual Amount:\n          {\" \" + asset.oldThreshold}\n        </span>\n      </React.Fragment>\n    );\n  } else if (asset[\"transactionClass\"] === \"AssetEditDescriptionTransaction\") {\n    return (\n      <React.Fragment key={i}>\n        <span>\n          <div\n            style={{\n              textAlign: \"center\",\n              marginBottom: \"10px\",\n              background: \"linearGradient(to right, red, yellow)\"\n            }}\n          >\n            Asset {\" -  \"}\n            <Link\n              to={{\n                pathname: `/asset/${asset.assetId ? asset.assetId : assetId}`,\n                search: `?type=${asset.assetType}`,\n                state: asset\n              }}\n              className=\"field-purple\"\n            >\n              {asset.assetId ? asset.assetId : assetId}\n            </Link>\n            <hr />\n          </div>\n          <span className=\"field-warning\">Asset's Description was updated</span>{\" \"}\n          on {\" \" + date} by{\" \"}\n          <span className=\"field-blue mb-10\">{\" \" + asset.user}</span>\n        </span>\n        <span />\n\n        <span className=\"d-block\">\n          Old Description:\n          {\" \" + asset.oldDescription}\n        </span>\n        <span className=\"d-block\">\n          New Description:\n          {\" \" + asset.newDescription}\n        </span>\n      </React.Fragment>\n    );\n  } else if (asset[\"transactionClass\"] === \"AssetMoveTransaction\") {\n    return (\n      <React.Fragment key={i}>\n        <div\n          style={{\n            textAlign: \"center\",\n            marginBottom: \"10px\",\n            background: \"linearGradient(to right, red, yellow)\"\n          }}\n        >\n          Asset {\" -  \"}\n          <Link\n            to={{\n              pathname: `/asset/${asset.assetId ? asset.assetId : assetId}`,\n              search: `?type=${asset.assetType}`,\n              state: asset\n            }}\n            className=\"field-purple\"\n          >\n            {asset.assetId ? asset.assetId : assetId}\n          </Link>\n          <hr />\n        </div>\n\n        <span className=\"m-5 \">\n          <span className=\"field-blue\">Asset's Location was updated</span> on{\" \"}\n          {\" \" + date} by{\" \"}\n          <span className=\"field-blue mb-10\">{\" \" + asset.user}</span>\n        </span>\n        <span />\n        <span className=\"d-block\">\n          Old Location:\n          {\" \" + asset.oldLocation}\n        </span>\n        <span className=\"d-block\">\n          New Location:\n          {\" \" + asset.newLocation}\n        </span>\n      </React.Fragment>\n    );\n  } else if (asset[\"transactionClass\"] === \"AssetUndoRemoveTransaction\") {\n    return (\n      <React.Fragment key={i}>\n        <div\n          style={{\n            textAlign: \"center\",\n            marginBottom: \"10px\",\n            background: \"linearGradient(to right, red, yellow)\"\n          }}\n        >\n          Asset {\" -  \"}\n          <Link\n            to={{\n              pathname: `/asset/${asset.assetId ? asset.assetId : assetId}`,\n              search: `?type=${asset.assetType}`,\n              state: asset\n            }}\n            className=\"field-purple\"\n          >\n            {asset.assetId ? asset.assetId : assetId}\n          </Link>\n          <hr />\n        </div>\n\n        <span className=\"m-5 \">\n          <span className=\"field-blue\"> Updated on asset</span> on {\" \" + date}{\" \"}\n          by <span className=\"field-blue mb-10\">{\" \" + asset.user}</span>\n        </span>\n        <span />\n        <span className=\"d-block\">\n          Old Location:\n          {asset.oldLocation}\n        </span>\n        <span className=\"d-block\">\n          New Location:\n          {asset.newLocation}\n        </span>\n      </React.Fragment>\n    );\n  } else if (asset[\"transactionClass\"] === \"AssetAssignTransaction\") {\n    return (\n      <React.Fragment key={i}>\n        <span\n          style={{\n            textAlign: \"center\",\n            marginBottom:\n              \"10px, background: 'linearGradient(to right, red, yellow)'\"\n          }}\n        >\n          <div>\n            Asset {\" -  \"}\n            <Link\n              to={{\n                pathname: `/asset/${asset.assetId ? asset.assetId : assetId}`,\n                search: `?type=${asset.assetType}`,\n                state: asset\n              }}\n              className=\"field-purple\"\n            >\n              {asset.assetId ? asset.assetId : assetId}\n            </Link>\n          </div>\n          <hr />\n        </span>\n        <span className=\"m-5 \">\n          <span className=\"field-green\"> Asset was assigned</span> to{\" \"}\n          {\" \" + asset.assignee} on\n          {\" \" + date} by{\" \"}\n          <span className=\"field-blue mb-10\">{\" \" + asset.user}</span>\n        </span>\n      </React.Fragment>\n    );\n  } else if (asset[\"transactionClass\"] === \"AssetEditCommentTransaction\") {\n    return (\n      <React.Fragment key={i}>\n        <div\n          style={{\n            textAlign: \"center\",\n            marginBottom: \"10px\",\n            background: \"linearGradient(to right, red, yellow)\"\n          }}\n        >\n          Asset {\" -  \"}\n          <Link\n            to={{\n              pathname: `/asset/${asset.assetId ? asset.assetId : assetId}`,\n              search: `?type=${asset.assetType}`,\n              state: asset\n            }}\n            className=\"field-purple\"\n          >\n            {asset.assetId ? asset.assetId : assetId}\n          </Link>\n          <hr />\n        </div>\n\n        <span className=\"m-5 \">\n          <span className=\"field-warning\">\n            {\" \"}\n            Comments were updated on {\" \" + date} by{\" \"}\n            <span className=\"field-blue mb-10\">{\" \" + asset.user}</span>\n          </span>\n        </span>\n        <span className=\"d-block\">Old Comment: {\" \" + asset.oldComment}</span>\n        <span className=\"d-block\">New Comment: {\" \" + asset.newComment}</span>\n      </React.Fragment>\n    );\n  }\n  // return <p>{JSON.stringify(asset)}</p>;\n}\n","import React from \"react\";\nimport { Doughnut } from \"react-chartjs\";\nimport { getColor, generateColors } from \"./util\";\n\nclass DoughnutChart extends React.Component {\n  chartPieces = {};\n  state = {\n    data: []\n  };\n\n  componentDidUpdate(nextProps) {\n    if (this.props.assets) {\n      this.chartPieces[\"other\"] = 0;\n\n      this.props.assets.map(asset => {\n        if (asset.labels.length) {\n          if (asset.labels[0] in this.chartPieces) {\n            this.chartPieces[asset.labels[0]] += 1;\n          } else {\n            this.chartPieces[asset.labels[0]] = 1;\n          }\n        } else {\n          this.chartPieces[\"other\"] += 1;\n        }\n      });\n    }\n    let arr = [];\n    let i = 0;\n    let colors = generateColors(Object.keys(this.chartPieces).length);\n    colors.splice(0, 1, \"#fab917\");\n\n    for (let key in this.chartPieces) {\n      const s = {\n        color: colors[i],\n        highlight: colors[i],\n        value: this.chartPieces[key],\n        label: key\n      };\n      i++;\n\n      arr.push(s);\n    }\n    if (arr.length > 0) {\n      if (!this.state.data.length) {\n        this.setState({ data: arr });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.data.length > 0 && (\n          <Doughnut\n            data={this.state.data}\n            options={{\n              title: {\n                display: true,\n                text: \"Single Asset Division\"\n              },\n              legend: {\n                display: true,\n                position: \"top\"\n              },\n              animationEasing: \"easeInSine\",\n              showTooltips: true,\n              responsive: true,\n              tooltipTitleFontColor: \"#000\",\n              percentageInnerCutout: 40,\n              maintainAspectRatio: false\n            }}\n            height=\"220\"\n            width=\"120\"\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default DoughnutChart;\n","import React, { Component } from \"react\";\nimport \"./dashboard.css\";\n// Componnents\nimport Assets from \"./assets\";\nimport DoughnutChart from \"./widgets/DoughnutChart\";\nimport { getAssets, recentTransactions } from \"../services/data\";\nimport { Link } from \"react-router-dom\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { displayTransactions } from \"./widgets/util\";\n// REACT TOASTIFY\n\nclass App extends Component {\n  state = {\n    assets: [],\n    lowInventory: [],\n    recents: [],\n    singleAssets: [],\n    batchAssets: [],\n    active: true\n  };\n\n  async componentWillMount() {\n    try {\n      const assets = await getAssets();\n      const recents = await recentTransactions();\n      let batches = [];\n      let singles = [];\n      assets.filter(a => {\n        a.assetType === \"Batch\" ? batches.push(a) : singles.push(a);\n      });\n      if (recents && assets) {\n        recents.map(recent => {\n          assets.forEach(a => {\n            if (a.assetId === recent.assetId) {\n              recent[\"assetType\"] = a.assetType;\n            }\n          });\n        });\n      }\n      this.setState({\n        assets,\n        recents,\n        singleAssets: singles,\n        batchAssets: batches,\n        active: false\n      });\n      this.checkLowInvenntory();\n    } catch (ex) {\n      this.setState({\n        active: false\n      });\n    }\n  }\n\n  checkLowInvenntory() {\n    const lowInventory = [];\n    this.state.assets.map(a => {\n      if (a[\"quantity\"] < a[\"threshold\"]) {\n        lowInventory.push(a);\n        this.setState({ lowInventory });\n      }\n      return;\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <LoadingOverlay\n          active={this.state.active}\n          className=\"_loading_overlay_overlay\"\n          spinner\n          styles={{\n            spinner: base => ({\n              ...base,\n              width: \"100px\",\n              height: \"100px\",\n              top: \"-150px\",\n              \"& svg circle\": {\n                stroke: \"#0F6FA6\"\n              }\n            })\n          }}\n        >\n          <div className=\"row b-raised sec-batch-scroll\">\n            <div className=\"col-9 my-card\">\n              <div className=\"row\">\n                <div className=\"col-6 data-block my-card\">\n                  <p className=\"box-heading\">Total Single Assets</p>\n                  <h3>\n                    {this.state.assets.length - this.state.batchAssets.length}\n                  </h3>\n\n                  {this.state.assets && (\n                    <DoughnutChart assets={this.state.singleAssets} />\n                  )}\n                </div>\n                <div className=\"col-6 data-block my-card\">\n                  <p className=\"box-heading\">Total Batch Assets</p>\n                  {this.state.batchAssets && (\n                    <h3>{this.state.batchAssets.length}</h3>\n                  )}\n                  <DoughnutChart assets={this.state.batchAssets} batch={true} />\n                </div>\n\n                <div className=\"data-block col-12\">\n                  <div className=\"pull-right\">\n                    <Link\n                      className=\"btn btn-warning btn-sm\"\n                      style={{ float: \"right\" }}\n                      to=\"/assets\"\n                    >\n                      Show More\n                    </Link>\n                  </div>\n                  <h4 style={{ textAlign: \"left\" }}>\n                    Total Items: {this.state.assets.length}\n                  </h4>\n                  <Assets\n                    tableClasses=\"table-scroll\"\n                    assets={this.state.assets}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-3 row-itmes-flex my-card no-left-border scroll-card\">\n              <div className=\"inventory-update\">\n                <h6\n                  style={{ textAlign: \"left\" }}\n                  className=\"label-fixed mt-0 card-filled\"\n                >\n                  Low Inventory Items:{\" \"}\n                  <span className=\"badge badge-dark\">\n                    {this.state.lowInventory.length}\n                  </span>\n                </h6>\n\n                <ul className=\"list-group\">\n                  {this.state.lowInventory.map((a, i) => (\n                    <li className=\"list-group-item\" key={i}>\n                      <span className=\"field-red\">{a.assetId}</span> is low on\n                      inventory. Only {a.quantity} left.\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              <div className=\"inventory-transactions \">\n                <br />\n                <h6 style={{ textAlign: \"left\" }} className=\"card-filled\">\n                  Latest Transactions:{\" \"}\n                  <span className=\"badge badge-dark\">\n                    {this.state.recents.length}\n                  </span>\n                </h6>\n                {this.state.recents.map((a, i) => (\n                  <ul className=\"list-group\" key={i}>\n                    <li className=\"list-group-item\">\n                      {displayTransactions(a, i)}\n                    </li>\n                    <br />\n                  </ul>\n                ))}\n              </div>\n            </div>\n          </div>\n        </LoadingOverlay>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport { Line } from \"react-chartjs\";\nimport { getbatchAssetHistory } from \"../../services/data\";\n\nclass LineChart extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: {\n        labels: [],\n        datasets: [\n          {\n            label: \"Batch\",\n            fillColor: \"rgba(220,220,220,0)\",\n            strokeColor: \"#116EA5\",\n            pointColor: \"rgba(151,187,205,1)\",\n            pointStrokeColor: \"#fff\",\n            pointHighlightFill: \"#fff\",\n            pointHighlightStroke: \"rgba(151,187,205,1)\",\n            data: []\n          }\n        ]\n      }\n    };\n  }\n\n  async componentWillReceiveProps() {\n    const batchHistory = await getbatchAssetHistory(this.props.id);\n    this.getBatchData(batchHistory);\n  }\n\n  getBatchData(arr) {\n    const labelsAndData = {\n      labels: [],\n      data: []\n    };\n    arr.map(obj => {\n      labelsAndData.data.push(obj.quantity);\n      labelsAndData.labels.push(\n        new Date(obj.timestamp).toLocaleString(\"en-us\", { month: \"long\" })\n      );\n    });\n\n    this.setState({\n      data: {\n        labels: labelsAndData.labels,\n        datasets: [\n          {\n            label: \"Batch\",\n            fillColor: \"rgba(220,220,220,0)\",\n            strokeColor: \"#116EA5\",\n            pointColor: \"rgba(151,187,205,1)\",\n            pointStrokeColor: \"#fff\",\n            pointHighlightFill: \"#fff\",\n            pointHighlightStroke: \"rgba(151,187,205,1)\",\n            data: labelsAndData.data\n          }\n        ]\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Line\n          data={this.state.data}\n          options={{\n            responsive: true,\n            animationSteps: 100,\n            bezierCurve: false,\n            steppedLine: \"after\",\n            scaleShowGridLines: true,\n            scaleShowVerticalLines: true\n          }}\n          height=\"210\"\n          width=\"800\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default LineChart;\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default class FormDialog extends Component {\n  state = {\n    open: false,\n    asset: {}\n  };\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      asset: nextProps.data\n    });\n  }\n\n  render() {\n    return (\n      <div style={this.props.styles}>\n        {this.props.button}\n\n        <Dialog\n          open={this.props.open}\n          onClose={() => this.props.onClick()}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">{this.props.title}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>Edit the asset details here:</DialogContentText>\n            {this.props.fields.map((obj, i) => (\n              <TextField\n                margin=\"dense\"\n                key={i}\n                id={obj.label.toLowerCase()}\n                label={obj.label}\n                type={obj.type}\n                defaultValue={obj.value}\n                fullWidth\n                hidden={\n                  this.props.assetType === \"single\" && obj.type === \"number\"\n                }\n                onChange={e => obj.onChange(obj.label.toLowerCase(), e)}\n              />\n            ))}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => this.props.onClick()} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={() => this.props.onSubmit()} color=\"primary\">\n              {this.props.submitButtonTitle\n                ? this.props.submitButtonTitle\n                : \"Save\"}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { displayTransactions } from \"./widgets/util\";\n\nexport const Transactions = props => {\n  return (\n    <div\n      className=\"col-4\"\n      style={{\n        maxHeight: \"inherit\",\n        overflowY: \"scroll\",\n        position: \"relative\",\n        marginTop: \"60px\"\n      }}\n    >\n      <div\n        style={{\n          position: \"fixed\",\n          top: \"250px\",\n          width: \"27%\",\n          zIndex: \"2000\"\n        }}\n      >\n        <h6 className=\"card-filled\">Transaction History</h6>\n        <hr />\n      </div>\n\n      <div style={{ position: \"absolute\", top: \"5px\" }}>\n        {props.data.reverse().map((a, i) => (\n          <ul className=\"list-group\" key={i}>\n            <li className=\"list-group-item\">\n              {displayTransactions(a, i, props.assetId)}\n            </li>\n            <br />\n          </ul>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport LineChart from \"./widgets/LineChart\";\nimport \"./asset.css\";\nimport * as qs from \"query-string\";\nimport FormDialog from \"./widgets/Dialog\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { Icon, Fab } from \"@material-ui/core\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { toast } from \"react-toastify\";\nimport { Transactions } from \"./transactions\";\nimport Button from \"@material-ui/core/Button\";\n\nimport {\n  getAsset,\n  getAssetHistory,\n  updateAsset,\n  editLabelsTransaction\n} from \"../services/data\";\n\nclass Asset extends Component {\n  assetType;\n\n  constructor(props) {\n    super(props);\n    this.assetType = qs.parse(props.location.search).type;\n  }\n  state = {\n    assetHistory: [],\n    asset: {},\n    showDialog: false,\n    open: false,\n    forLabels: false,\n    active: true,\n    temp: {},\n    tempLabel: \"\",\n    anchorEl: null\n  };\n\n  componentWillMount() {\n    this.getAssetsData();\n  }\n\n  async getAssetsData() {\n    try {\n      const assetHistory = await getAssetHistory(this.props.match.params.id);\n      const asset = await getAsset(this.props.match.params.id);\n      this.setState({\n        assetHistory,\n        asset,\n        active: false\n      });\n    } catch (ex) {\n      toast.error(\"Server unavailable. Please try againn later.\");\n    }\n  }\n\n  handleClickOpen = e => {\n    this.setState({ open: !this.state.open });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false, forLabels: false });\n  };\n\n  openFormDialog() {\n    this.setState({ forLabels: !this.state.forLabels });\n  }\n\n  handleDelete(val) {\n    console.log(val);\n  }\n\n  handleChange = (name, event) => {\n    const { temp } = this.state;\n    temp[name] = event.target.value;\n    this.setState({ temp });\n  };\n\n  handleSubmit = async () => {\n    if (Object.keys(this.state.temp).length > 0) {\n      this.setState({ active: true, open: false });\n\n      try {\n        const result = await updateAsset(\n          this.state.asset.assetId,\n          this.state.temp,\n          this.state.asset.quantity\n        );\n        if (result) {\n          this.getAssetsData();\n          this.setState({ temp: {} });\n        }\n      } catch (ex) {\n        this.setState({ active: false });\n      }\n    } else {\n      this.setState({ open: false });\n    }\n  };\n\n  async editLabels(asset, mode) {\n    // console.clear();\n    let { labels, assetId } = asset;\n    let tempLabel = this.state.temp.label;\n    let oldAsset = JSON.parse(JSON.stringify(asset));\n    const tempObj = { asset: assetId };\n\n    if (mode === \"delete\") {\n      labels.splice(labels.indexOf(tempLabel), 1);\n      tempObj[\"newLabels\"] = JSON.stringify(labels);\n      asset.labels = labels;\n      this.setState({ asset });\n\n      try {\n        const result = await editLabelsTransaction(tempObj);\n        if (result) {\n          toast.warning(\n            `${tempLabel} was removed sucessfully from asset's labels`\n          );\n          this.getAssetsData();\n        }\n      } catch (ex) {\n        this.setState({ asset: oldAsset });\n        toast.error(\"Something went wrong. Please try again later.\");\n      }\n    } else {\n      if (this.state.temp.label) {\n        tempObj[\"newLabels\"] = JSON.stringify([\n          ...labels,\n          this.state.temp.label\n        ]);\n        asset.labels.push(tempLabel);\n        this.setState({ forLabels: !this.state.forLabels, asset });\n        try {\n          const result = await editLabelsTransaction(tempObj);\n          if (result)\n            toast.success(\"Label: \" + tempLabel + \" was added successfully\");\n          this.getAssetsData();\n        } catch (ex) {\n          toast.error(\"Something went wrong. Please try again later.\");\n        }\n      }\n    }\n  }\n\n  generateFields(arr) {\n    return arr.map(label => {\n      return {\n        type: label === \"quantity\" || label === \"threshold\" ? \"number\" : \"text\",\n        label: label[0].toUpperCase() + label.slice(1),\n        value: this.state.asset[label],\n        onChange: this.handleChange\n      };\n    });\n  }\n\n  render() {\n    return (\n      <LoadingOverlay\n        active={this.state.active}\n        // className=\"_loading_overlay_overlay\"\n        spinner\n        styles={{\n          spinner: base => ({\n            ...base,\n            width: \"100px\",\n            height: \"100px\",\n            top: \"-150px\",\n            \"& svg circle\": {\n              stroke: \"#0F6FA6\"\n            }\n          })\n        }}\n      >\n        <div className=\"asset-header b-raised my-card\">\n          {\n            <div\n              className={\n                \"row mt-25 \" +\n                (this.assetType === \"Batch\" ? \"sec-batch-scroll\" : \"sec-scroll\")\n              }\n            >\n              <div className=\"col-8\">\n                <div className=\"d-flex\">\n                  <h3>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className=\"mr-15\"\n                      onClick={() => this.props.history.goBack()}\n                    >\n                      {<Icon>keyboard_backspace</Icon>}\n                    </Button>\n                    Asset {this.props.match.params.id}\n                  </h3>\n                  <br />\n                  {this.assetType !== \"Single\" ? (\n                    <div className=\"d-flex\">\n                      <div className=\"p-2 m-5 bg-success text-white\">\n                        <span className=\"m-5\"> Threshold</span>\n                        <span className=\"badge badge-dark\">\n                          {this.state.asset.threshold}\n                        </span>\n                      </div>\n                      <div className=\"p-2 m-5 bg-warning text-white\">\n                        <span className=\"m-5\"> Quantity</span>\n                        <span className=\"badge badge-dark\">\n                          {this.state.asset.quantity}\n                        </span>\n                      </div>\n                    </div>\n                  ) : null}\n                </div>\n                <div className=\"my-card box-shadow\">\n                  <span\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\"\n                    }}\n                  >\n                    <h3>Details:</h3>\n                    <FormDialog\n                      // ASSET DETTAILS EDIT DIALOG\n                      open={this.state.open}\n                      onClick={() => this.handleClickOpen()}\n                      button={\n                        <Fab\n                          color=\"primary\"\n                          size=\"small\"\n                          onClick={() => this.handleClickOpen()}\n                        >\n                          <Icon>edit_icon</Icon>\n                        </Fab>\n                      }\n                      asset={this.state.asset}\n                      onChange={this.handleChange}\n                      onSubmit={this.handleSubmit}\n                      assetType={this.state.asset.assetType}\n                      title={\"You can change the details here\"}\n                      fields={this.generateFields([\n                        \"description\",\n                        \"status\",\n                        \"comment\",\n                        \"quantity\",\n                        \"threshold\"\n                      ])}\n                    />\n                  </span>\n                  <hr />\n                  {this.state.asset.description && (\n                    <div>\n                      <h5>\n                        Description:\n                        <span className=\"details\">\n                          {\" \" + this.state.asset.description}\n                        </span>\n                      </h5>\n                      <h5>\n                        Status:\n                        <span className=\"details\">\n                          {\" \" + this.state.asset.status}\n                        </span>\n                      </h5>\n                    </div>\n                  )}\n                  {this.state.asset.labels &&\n                    this.state.asset.labels.map(val => (\n                      <Chip\n                        key={val}\n                        deleteIcon={<Icon>cancel</Icon>}\n                        label={val}\n                        onDelete={() =>\n                          this.editLabels(this.state.asset, \"delete\")\n                        }\n                      />\n                    ))}\n                  <FormDialog\n                    // FORM LABELS EDIT DIALOG\n                    styles={{ display: \"inline\" }}\n                    open={this.state.forLabels}\n                    onClick={() => this.openFormDialog()}\n                    button={\n                      <Chip\n                        label={<Icon color=\"action\">add_circle</Icon>}\n                        onClick={() => this.openFormDialog()}\n                      />\n                    }\n                    asset={this.state.asset}\n                    onChange={this.handleChange}\n                    submitButtonTitle={\"Add\"}\n                    onSubmit={() => this.editLabels(this.state.asset)}\n                    assetType={this.state.asset.assetType}\n                    title={\"Add another label\"}\n                    fields={[\n                      {\n                        type: \"text\",\n                        label: \"Label\",\n                        onChange: this.handleChange\n                      }\n                    ]}\n                  />\n                </div>\n                <br />\n                {this.assetType !== \"Single\" ? (\n                  <div className=\" my-card box-shadow\">\n                    <p className=\"box-heading\">Inventory OverTime</p>\n                    <hr />\n                    {/* <BarChart /> */}\n                    <LineChart id={this.props.match.params.id} />\n                  </div>\n                ) : null}\n              </div>\n\n              <Transactions\n                data={this.state.assetHistory}\n                assetId={this.state.asset.assetId}\n              />\n            </div>\n          }\n        </div>\n      </LoadingOverlay>\n    );\n  }\n}\n\nexport default Asset;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { toast } from \"react-toastify\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { getUsername } from \"./widgets/util\";\nimport { Icon } from \"@material-ui/core\";\n\nclass Navbar extends Component {\n  state = {\n    anchorEl: null\n  };\n\n  logout() {\n    localStorage.removeItem(\"labId\");\n    toast.success(\"Logout Successful\");\n    window.location.reload();\n  }\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n\n    const { pathname } = this.props.history.location;\n    console.log(pathname);\n\n    return (\n      <div className=\"backgroung-img\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Link\n              to={{\n                pathname: `/`\n              }}\n              style={{ textDecoration: \"none\" }}\n            >\n              {/* <img\n              className=\"m-10\"\n              src={require(\"../assets/logo.jpg\")}\n              alt=\"logo\"\n              height=\"90\"\n            /> */}\n\n              <div className=\"p-3 mt-5 ml-5\">\n                <h3 className=\"page-title\">\n                  Innovation Lab Inventory Dashboard\n                </h3>\n                {/* {pathname === \"/\" && (\n                  <React.Fragment>\n                    <h3 className=\"page-title\">\n                      Innovation Lab Inventory Dashboard\n                    </h3>\n                  </React.Fragment>\n                )}\n                {pathname.includes(\"asset\") && (\n                  <h3 className=\"page-title\">ASSET</h3>\n                )}\n                {pathname === \"/assets\" && (\n                  <div>\n                    <h3 className=\"page-title\">\n                      <Button\n                        color=\"default\"\n                        variant=\"contained\"\n                        className=\"mr-15\"\n                        onClick={() => this.props.history.goBack()}\n                      >\n                        {<Icon>keyboard_backspace</Icon>}\n                      </Button>\n                      ASSETS\n                    </h3>\n                  </div>\n                )} */}\n              </div>\n            </Link>\n          </div>\n          <div className=\"col\">\n            {localStorage.getItem(\"labId\") && (\n              <div\n                style={{\n                  height: \"35px\",\n                  float: \"right\",\n                  position: \"absolute\",\n                  right: \"0px\"\n                }}\n              >\n                <Button\n                  aria-owns={anchorEl ? \"simple-menu\" : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleClick}\n                >\n                  <Icon>more_vert</Icon>\n                </Button>\n                <Menu\n                  id=\"simple-menu\"\n                  anchorEl={anchorEl}\n                  open={Boolean(anchorEl)}\n                  onClose={this.handleClose}\n                >\n                  <MenuItem>{\"Hi, \" + getUsername()}</MenuItem>\n                  <MenuItem onClick={() => this.logout()}>Logout</MenuItem>\n                </Menu>\n              </div>\n            )}\n          </div>\n        </div>\n        {pathname === \"/assets\" && (\n          <React.Fragment>\n            <h3 className=\"page-title container ml-20\">ASSETS</h3>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Navbar);\n","import React from \"react\";\n\nconst Container = ({ children }) => {\n  return (\n    <div className=\"container body\">\n      <div className=\"main_container\">{children}</div>\n    </div>\n  );\n};\n\nexport default Container;\n","import React from \"react\";\n\nconst Input = ({ name, type, label, value, onChange, error }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        value={value}\n        type={type}\n        className=\"form-control\"\n        id={name}\n        name={name}\n        onChange={onChange}\n      />\n\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport \"./login.css\";\nimport { login } from \"../services/data\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport Form from \"./widgets/form\";\nimport { toast } from \"react-toastify\";\n\nclass Login extends Form {\n  state = {\n    data: {\n      username: \"\",\n      password: \"\"\n    },\n    errors: {\n      username: \"\",\n      password: \"\"\n    },\n    failed: false,\n    active: false\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .label(\"Password\")\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem(\"labId\")) {\n      this.props.history.replace(\"/\");\n    }\n  }\n\n  doSubmit = async () => {\n    try {\n      const res = await login(this.state.data);\n      if (res) {\n        this.props.history.replace(\"/\");\n        toast.success(\n          \"Logged in successfully as \" + this.state.data.username.toUpperCase()\n        );\n      }\n    } catch (ex) {\n      toast.error(\"Login failed\");\n      this.setState({ failed: true, active: false });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <LoadingOverlay\n          active={this.state.active}\n          spinner\n          styles={{\n            spinner: base => ({\n              ...base,\n              width: \"100px\",\n              height: \"100px\",\n              top: \"-150px\",\n              \"& svg circle\": {\n                stroke: \"#0F6FA6\"\n              }\n            })\n          }}\n        >\n          <div className=\"card-login mt-20\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Login</h5>\n              {this.state.failed && (\n                <div className=\"alert alert-danger\">\n                  {\" \"}\n                  Username/Password do not match.\n                </div>\n              )}\n              <form>\n                {this.renderInput(\"Username*\", \"username\", \"form-control\")}\n                {this.renderInput(\"Password*\", \"password\", \"password\")}\n                {this.renderSubmitButton(\n                  \"Submit\",\n                  \"btn btn-warning form-control\"\n                )}\n              </form>\n            </div>\n          </div>\n        </LoadingOverlay>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {}\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  validate = () => {\n    const result = Joi.validate(this.state.data, this.schema, {\n      abortEarly: false\n    });\n    if (!result.error) return null;\n    const errors = {};\n    result.error.details.map(obj => {\n      errors[obj.path[0]] = obj.message;\n    });\n    return errors;\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMsg = this.validateProperty(input);\n    if (errorMsg) errors[input.name] = errorMsg;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors, failed: false });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const errors = this.validate() || \"\";\n\n    this.setState({ errors });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  renderInput(label, name, type = \"text\", classes) {\n    return (\n      <Input\n        label={label}\n        name={name}\n        type={type}\n        value={this.state.data[name]}\n        error={this.state.errors[name]}\n        onChange={this.handleChange}\n        classes={classes}\n      />\n    );\n  }\n\n  renderSelectInput(label, name, genres) {\n    return (\n      <div>\n        <div className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <label className=\"input-group-text\" htmlFor={name}>\n              {label}\n            </label>\n          </div>\n          <select\n            className=\"custom-select\"\n            id={name}\n            onChange={this.handleChange}\n            name={name}\n            value={this.state.data.genre}\n          >\n            <option value=\"\">Select a Genre</option>\n            {genres.map(g => {\n              return (\n                <option key={g._id} value={g._id}>\n                  {g.name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        {this.state.errors[name] && (\n          <div className=\"alert alert-danger\">{this.state.errors[name]}</div>\n        )}\n      </div>\n    );\n  }\n\n  renderSubmitButton(label, classes) {\n    return (\n      <button\n        disabled={this.validate()}\n        type=\"submit\"\n        onClick={this.handleSubmit}\n        className={classes}\n      >\n        {label}\n      </button>\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isLoggedIn } from \"../services/data\";\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (!isLoggedIn()) return <Redirect to=\"/login\" />;\n        return Component ? <Component {...props} /> : render;\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport Dashboard from \"./components/Dashboard\";\nimport Assets from \"./components/assets\";\nimport Asset from \"./components/asset\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\nimport Navbar from \"./components/navbar\";\nimport Container from \"./components/Container\";\nimport Login from \"./components/login\";\nimport ProtectedRoute from \"./components/protectedRoute\";\n\n// Using bootstrap, PrimeReact the UI libraries\nimport \"bootstrap/dist/css/bootstrap.css\";\n// import \"primereact/resources/themes/nova-light/theme.css\";\n// import \"primereact/resources/primereact.min.css\";\n// import \"primeicons/primeicons.css\";\n// Our styles\nimport \"./styles/custom.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nReactDOM.render(\n  <HashRouter>\n    <React.Fragment>\n      <ToastContainer />\n\n      <Navbar />\n      <Container>\n        <Switch>\n          <ProtectedRoute path=\"/asset/:id\" component={Asset} />\n          <ProtectedRoute path=\"/assets\" component={Assets} />\n          <Route path=\"/login\" component={Login} />\n          <ProtectedRoute path=\"/\" component={Dashboard} />\n        </Switch>\n      </Container>\n    </React.Fragment>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}