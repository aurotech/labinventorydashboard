{"version":3,"sources":["assets/logo.jpg","services/data.js","components/assets.jsx","components/widgets/DoughnutChart.js","components/Dashboard.jsx","components/widgets/LineChart.js","components/widgets/Dialog.jsx","components/asset.jsx","components/navbar.jsx","components/Container.jsx","components/login.jsx","components/protectedRoute.jsx","index.js"],"names":["module","exports","__webpack_require__","p","http","interceptors","request","use","config","headers","localStorage","getItem","error","Promise","reject","response","status","apiEndPoint","login","_x","_login","apply","this","arguments","_callee","credentials","_ref","data","regenerator_default","a","wrap","_context","prev","next","post","sent","setItem","token","toString","abrupt","t0","console","log","stop","getAssets","_getAssets","_callee2","_ref2","_context2","get","assets","getbatchAssetHistory","_x2","_getbatchAssetHistory","_callee3","id","_ref3","_context3","qtyHistory","updateAsset","_x3","_x4","_x5","_updateAsset","_callee4","asset","amount","_context4","assetUpdateParameterGenrator","assetUpdater","_callee5","arr","i","res","_context5","length","url","body","push","newAsset","oldAmount","Object","keys","map","key","property","toUpperCase","slice","objKey","Math","abs","concat","defineProperty","getAsset","_x9","_getAsset","_callee6","_ref4","_context6","getAssetHistory","_x10","_getAssetHistory","_callee7","_context7","history","recentTransactions","_recentTransactions","_callee8","_ref5","_context8","Assets","state","assetHistory","getHistory","e","assetId","persist","_this","setState","show","target","props","react_default","createElement","Link","to","pathname","search","assetType","className","description","quantity","timeLastUpdated","tableClasses","scope","displayTableBody","Component","DoughnutChart","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","nextProps","_this2","labels","forEach","label","color","random","s","highlight","value","react_chartjs","options","title","display","text","legend","position","animationEasing","showTooltips","responsive","tooltipTitleFontColor","percentageInnerCutout","maintainAspectRatio","height","width","React","App","lowInventory","recents","batchAssets","active","batches","filter","checkLowInvenntory","date","Date","timestamp","getMonth","getDate","getFullYear","Fragment","oldLabels","l","newLabels","transactionType","newThreshold","oldThreshold","user","oldDescription","newDescription","oldLocation","newLocation","assignee","_this3","LoadingOverlay_default","spinner","styles","base","objectSpread","top","& svg circle","stroke","widgets_DoughnutChart","style","float","textAlign","components_assets","onMouse","onMouseEvent","displayTransactions","LineChart","datasets","fillColor","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","batchHistory","getBatchData","labelsAndData","obj","toLocaleString","month","animationSteps","bezierCurve","steppedLine","scaleShowGridLines","scaleShowVerticalLines","FormDialog","open","buttonType","Button_default","variant","onClick","Fab_default","size","Icon_default","Dialog_default","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","fields","TextField_default","margin","toLowerCase","type","defaultValue","fullWidth","disabled","onChange","DialogActions_default","onSubmit","Asset","showDialog","temp","handleClickOpen","handleClose","handleDelete","val","handleChange","name","event","handleSubmit","asyncToGenerator","mark","getAssetsData","qs","location","match","params","threshold","justifyContent","Dialog_FormDialog","comment","Chip_default","deleteIcon","index_es","onDelete","widgets_LineChart","Navbar","removeItem","window","reload","src","require","alt","logout","withRouter","Container","children","Login","username","createRef","password","errors","schema","Joi","string","required","replace","preventDefault","current","setTimeout","htmlFor","ref","ProtectedRoute","path","component","render","rest","objectWithoutProperties","Route","assign","isLoggedIn","Redirect","ReactDOM","react","HashRouter","navbar","components_Container","Switch","protectedRoute","Dashboard","document","getElementById"],"mappings":"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","file":"static/js/main.0e108f63.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3bb01b46.jpg\";","import http from \"axios\";\n\n// http.defaults.headers.common[\"X-Access-Token\"] = getToken();\n\nhttp.interceptors.request.use(\n  config => {\n    //   document.body.classList.add(\"loader-hidden\");\n    config.headers[\"X-Access-Token\"] = localStorage.getItem(\"labId\");\n    return config;\n  },\n  error => Promise.reject(error)\n);\n\nhttp.interceptors.response.use(null, error => {\n  // document.body.classList.add(\"loader-active\");\n\n  if (\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status <= 500\n  ) {\n    return Promise.reject(error);\n  }\n});\nexport function getToken() {\n  if (localStorage.getItem(\"labId\")) {\n    return localStorage.getItem(\"labId\");\n  }\n  return null;\n}\nconst apiEndPoint = \"http://ec2-54-89-116-114.compute-1.amazonaws.com:\";\n\nexport async function login(credentials) {\n  try {\n    const { data } = await http.post(apiEndPoint + \"8080/login/\", credentials);\n\n    if (data) {\n      localStorage.setItem(\"labId\", data.token.toString());\n      return true;\n    }\n  } catch (ex) {\n    if (ex.response && ex.response.status === 404) console.log(\"Error\");\n  }\n}\n\nexport function isLoggedIn() {\n  if (localStorage.getItem(\"labId\")) {\n    return true;\n  }\n}\nexport async function getAssets() {\n  const { data } = await http.get(apiEndPoint + \"8080/assets\");\n  return data.assets;\n}\n\nexport async function getbatchAssetHistory(id) {\n  const { data } = await http.get(\n    apiEndPoint + \"8080/batchAssetQuantityHistory/\" + id\n  );\n  return data.qtyHistory;\n}\n\nexport async function updateAsset(id, asset, amount) {\n  const assets = assetUpdateParameterGenrator(id, asset, amount);\n  const i = 0;\n  return await assetUpdater([], i, assets);\n}\n\nasync function assetUpdater(arr, i, assets) {\n  while (i < assets.length) {\n    let res = await http.post(assets[i].url, assets[i].body);\n    arr.push(res);\n    i++;\n  }\n  console.log(arr);\n  return arr;\n}\n\nfunction assetUpdateParameterGenrator(id, newAsset, oldAmount) {\n  // Helper function to generate individual asset key which were edited\n\n  const arr = [];\n  Object.keys(newAsset).map(key => {\n    let property = \"Edit\" + key[0].toUpperCase() + key.slice(1);\n    let objKey = \"new\" + key[0].toUpperCase() + key.slice(1);\n    let url = \"\";\n\n    if (key === \"status\") {\n      property = \"Move\";\n      objKey = \"newLocation\";\n    } else if (key === \"quantity\") {\n      if (newAsset[key] - oldAmount > 0) {\n        property = \"Addition\";\n        objKey = \"amount\";\n      } else {\n        property = \"Subtraction\";\n        objKey = \"amount\";\n      }\n      newAsset[key] = Math.abs(newAsset[key] - oldAmount);\n    }\n    url = `${apiEndPoint}80/api/Asset${property}Transaction`;\n    arr.push({ body: { asset: id, [objKey]: newAsset[key] }, url });\n  });\n  return arr;\n}\n\nexport async function getAsset(id) {\n  const { data } = await http.get(apiEndPoint + \"80/api/LabAsset/\" + id);\n\n  if (data) return data;\n  return [];\n}\n\nexport async function getAssetHistory(id) {\n  const res = await http.get(apiEndPoint + \"8080/assetHistory/\" + id);\n  const { data } = res;\n\n  if (data && data.history) return data.history;\n  return [];\n}\n\nexport async function recentTransactions() {\n  const { data } = await http.get(apiEndPoint + \"8080/recentTransactions/\");\n\n  if (data && data.history) return data.history;\n  return [];\n}\n","import React, { Component } from \"react\";\nimport { getAssets, getAssetHistory } from \"../services/data\";\nimport { Link } from \"react-router-dom\";\n\nclass Assets extends Component {\n  state = {\n    assets: [],\n    assetHistory: []\n  };\n\n  async componentWillMount() {\n    if (!this.props.assets) {\n      const assets = await getAssets();\n      // const assetHistory = await getAssetHistory(assetId);\n      this.setState({ assets });\n    }\n  }\n  getHistory = async (e, asset, assetId) => {\n    e.persist();\n\n    const assetHistory = await getAssetHistory(assetId);\n    if (assetHistory && this.state.assetHistory.length <= 1) {\n      this.setState({ assetHistory });\n      asset.show(e, e.target);\n    }\n  };\n\n  displayTableBody(assets) {\n    return assets.map((a, i) => (\n      <tr key={a.assetId}>\n        <td>\n          <Link\n            to={{\n              pathname: `/asset/${a.assetId}`,\n              search: `?type=${a.assetType}`,\n              state: a\n            }}\n            className=\"badge badge-secondary\"\n          >\n            {a.assetId}\n          </Link>\n        </td>\n        <td>{a.assetType}</td>\n        <td>\n          {/* {this.state.assetHistory.map((h, i) => (\n            <p key={i}>{h.description}</p>\n          ))} */}\n          {a.description}\n        </td>\n        <td>{a.quantity || 1}</td>\n        <td>{a.status}</td>\n        <td>{a.timeLastUpdated.slice(0, 10)}</td>\n        <td>{a.timeLastUpdated.slice(0, 10)}</td>\n      </tr>\n    ));\n  }\n\n  render() {\n    return (\n      <div className={this.props.tableClasses}>\n        <table\n          className={\n            \"rounded table tableFixHead table-striped\" +\n            (!this.props.tableClasses ? \" top-block-raised\" : \"\")\n          }\n        >\n          <thead>\n            <tr>\n              <th scope=\"col\">ID</th>\n              <th scope=\"col\">Type</th>\n              <th scope=\"col\">Description</th>\n              <th scope=\"col\">Quantity</th>\n              <th scope=\"col\">Location</th>\n              <th scope=\"col\">Last Scanned</th>\n              <th scope=\"col\">Last Updated</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.assets\n              ? this.displayTableBody(this.props.assets)\n              : this.displayTableBody(this.state.assets)}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Assets;\n","import React from \"react\";\nimport { Doughnut } from \"react-chartjs\";\n\nclass DoughnutChart extends React.Component {\n  slice = {};\n  state = {\n    data: []\n  };\n\n  constructor() {\n    super();\n    this.state = { data: [] };\n  }\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   if (nextProps.assets !== prevState.assets) {\n  //     return { assets: nextProps.assets };\n  //   }\n  //   return null;\n  // }\n\n  componentDidUpdate(nextProps) {\n    if (this.props.assets) {\n      this.props.assets.map(asset => {\n        asset.labels.forEach(label => {\n          if (label in this.slice) {\n            this.slice[label] += 1;\n          } else {\n            this.slice[label] = 1;\n          }\n        });\n      });\n    }\n    let arr = [];\n    for (let key in this.slice) {\n      const color = \"#\" + ((Math.random() * 0xff0000) << 0).toString(16);\n      const s = {\n        color,\n        highlight: color,\n        value: this.slice[key],\n        label: key\n      };\n      arr.push(s);\n    }\n    if (arr.length > 0) {\n      if (!this.state.data.length) {\n        this.setState({ data: arr });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.data.length > 0 && (\n          <Doughnut\n            data={this.state.data}\n            options={{\n              title: {\n                display: true,\n                text: \"Single Asset Division\"\n              },\n              legend: {\n                display: true,\n                position: \"top\"\n              },\n              animationEasing: \"easeInSine\",\n              showTooltips: true,\n              responsive: true,\n              tooltipTitleFontColor: \"#000\",\n              percentageInnerCutout: 40,\n              maintainAspectRatio: false\n            }}\n            height=\"220\"\n            width=\"120\"\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default DoughnutChart;\n","import React, { Component } from \"react\";\nimport \"./dashboard.css\";\n// Componnents\nimport Assets from \"./assets\";\nimport DoughnutChart from \"./widgets/DoughnutChart\";\nimport { getAssets, recentTransactions } from \"../services/data\";\nimport { Link } from \"react-router-dom\";\nimport LoadingOverlay from \"react-loading-overlay\";\n\nclass App extends Component {\n  state = {\n    assets: [],\n    lowInventory: [],\n    recents: [],\n    batchAssets: [],\n    active: true\n  };\n\n  async componentWillMount() {\n    const assets = await getAssets();\n    const recents = await recentTransactions();\n    const batches = [];\n    assets.filter(a => {\n      if (a.assetType === \"Batch\") {\n        batches.push(a);\n      }\n    });\n    this.setState({ assets, recents, batchAssets: batches, active: false });\n    this.checkLowInvenntory();\n  }\n\n  displayTransactions(asset, i) {\n    const date = (\n      new Date(asset.timestamp).getMonth() +\n      1 +\n      \"/\" +\n      new Date(asset.timestamp).getDate() +\n      \"/\" +\n      new Date(asset.timestamp).getFullYear()\n    ).toString();\n\n    if (asset[\"transactionClass\"] === \"AssetEditLabelsTransaction\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-blue\">Labels were updated</span> on\n            {\" \" + date}\n          </p>\n          <p>\n            {asset.oldLabels.length > 0 && \"Old Labels:\"}\n            {asset.oldLabels.length > 0 &&\n              asset.oldLabels.map((l, i) => (\n                <span key={i}>{\" \" + l + \", \"}</span>\n              ))}\n          </p>\n          <p>\n            {asset.newLabels.length > 0 && \"New Labels:\"}\n            {asset.newLabels.length > 0 &&\n              asset.newLabels.map((l, i) => (\n                <span key={i}>{\" \" + l + \" \"}</span>\n              ))}\n          </p>\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionClass\"] === \"AssetAdditionTransaction\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-green\">{asset.transactionType}</span>\n            {\" \" + date}\n          </p>\n          <p>\n            Old Amount:\n            {asset.oldAmount}\n          </p>\n          <p>\n            New Amount:\n            {asset.amount}\n          </p>\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionClass\"] === \"AssetSubtractionTransaction\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-warning\">{asset.transactionType}</span>\n            {\" \" + date}\n          </p>\n          <p>\n            Old Amount:\n            {asset.oldAmount}\n          </p>\n          <p>\n            New Amount:\n            {asset.amount}\n          </p>\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionClass\"] === \"AssetCreateTransaction\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-green\">A new Asset was created</span> on{\" \"}\n            {\" \" + date}\n          </p>\n          <p>\n            Asset Type:\n            {asset.assetType}\n          </p>\n          <p>\n            Asset Description:\n            {asset.description}\n          </p>\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionClass\"] === \"AssetEditThresholdTransaction\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-blue\">{asset.transactionType}</span>\n            {\" \" + date}\n          </p>\n          <p>\n            Threshold:\n            {asset.newThreshold}\n          </p>\n          <p>\n            Actual Amount:\n            {asset.oldThreshold}\n          </p>\n        </React.Fragment>\n      );\n    } else if (\n      asset[\"transactionClass\"] === \"AssetEditDescriptionTransaction\"\n    ) {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-warning\">\n              Asset's Description was updated\n            </span>{\" \"}\n            on {\" \" + date} by {\" \" + asset.user}\n          </p>\n          <p>\n            Old Description:\n            {asset.oldDescription}\n          </p>\n          <p>\n            New Description:\n            {asset.newDescription}\n          </p>\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionClass\"] === \"AssetMoveTransaction\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-blue\">Asset's Location was updated</span> on{\" \"}\n            {\" \" + date} by {\" \" + asset.user}\n          </p>\n          <p>\n            Old Location:\n            {asset.oldLocation}\n          </p>\n          <p>\n            New Location:\n            {asset.newLocation}\n          </p>\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionClass\"] === \"AssetUndoRemoveTransaction\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-blue\"> Updated on asset</span> on{\" \"}\n            {\" \" + date} by {\" \" + asset.user}\n          </p>\n          <p>\n            Old Location:\n            {asset.oldLocation}\n          </p>\n          <p>\n            New Location:\n            {asset.newLocation}\n          </p>\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionClass\"] === \"AssetAssignTransaction\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-green\"> Asset was assigned</span> to{\" \"}\n            {\" \" + asset.assignee} on\n            {\" \" + date}\n          </p>\n        </React.Fragment>\n      );\n    }\n    // return <p>{JSON.stringify(asset)}</p>;\n  }\n\n  checkLowInvenntory() {\n    const lowInventory = [];\n    this.state.assets.map(a => {\n      if (a[\"quantity\"] < a[\"threshold\"]) {\n        lowInventory.push(a);\n        this.setState({ lowInventory });\n      }\n      return;\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <LoadingOverlay\n          active={this.state.active}\n          className=\"_loading_overlay_overlay\"\n          spinner\n          styles={{\n            spinner: base => ({\n              ...base,\n              width: \"100px\",\n              height: \"100px\",\n              top: \"-150px\",\n              \"& svg circle\": {\n                stroke: \"#0F6FA6\"\n              }\n            })\n          }}\n        >\n          <div className=\"row top-block-raised\">\n            <div className=\"col-9 my-card\">\n              <div className=\"row\">\n                <div className=\"col-6 data-block my-card\">\n                  <p className=\"box-heading\">Total Single Assets</p>\n                  <h3>{this.state.assets.length}</h3>\n\n                  {this.state.assets && (\n                    <DoughnutChart assets={this.state.assets} />\n                  )}\n                </div>\n                <div className=\"col-6 data-block my-card\">\n                  <p className=\"box-heading\">Total Batch Assets</p>\n                  {this.state.batchAssets && (\n                    <h3>{this.state.batchAssets.length}</h3>\n                  )}\n                  {/* \n                  {this.state.batchAssets && (\n                    <DoughnutChart assets={this.state.batchAssets} />\n                  )} */}\n                  <DoughnutChart assets={this.state.batchAssets} />\n                </div>\n\n                <div className=\"data-block\">\n                  <div className=\"pull-right\">\n                    <Link\n                      className=\"btn btn-warning btn-sm\"\n                      style={{ float: \"right\" }}\n                      to=\"/assets\"\n                    >\n                      Show More\n                    </Link>\n                  </div>\n                  <h4 style={{ textAlign: \"left\" }}>\n                    Total Items: {this.state.assets.length}\n                  </h4>\n                  <Assets\n                    tableClasses=\"table-scroll\"\n                    onMouse={this.onMouseEvent}\n                    assets={this.state.assets}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-3 row-itmes-flex my-card no-left-border\">\n              <div className=\"inventory-update\">\n                <h6\n                  style={{ textAlign: \"left\" }}\n                  className=\"label-fixed mt-0 card-filled\"\n                >\n                  Low Inventory Items:{\" \"}\n                  <span className=\"badge badge-dark\">\n                    {this.state.lowInventory.length}\n                  </span>\n                </h6>\n\n                <ul className=\"list-group\">\n                  {this.state.lowInventory.map((a, i) => (\n                    <li className=\"list-group-item\" key={i}>\n                      <span className=\"field-red\">{a.assetId}</span> is low on\n                      inventory. Only {a.quantity} left.\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              <div className=\"inventory-transactions\">\n                <br />\n                <h6 style={{ textAlign: \"left\" }} className=\"card-filled\">\n                  Latest Transactions:{\" \"}\n                  <span className=\"badge badge-dark\">\n                    {this.state.recents.length}\n                  </span>\n                </h6>\n                {this.state.recents.map((a, i) => (\n                  <ul className=\"list-group\" key={i}>\n                    <li className=\"list-group-item\">\n                      {this.displayTransactions(a, i)}\n                    </li>\n                    <br />\n                  </ul>\n                ))}\n              </div>\n            </div>\n          </div>\n        </LoadingOverlay>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport { Line } from \"react-chartjs\";\nimport { getbatchAssetHistory } from \"../../services/data\";\n\nclass LineChart extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: {\n        labels: [],\n        datasets: [\n          {\n            label: \"Batch\",\n            fillColor: \"rgba(220,220,220,0)\",\n            strokeColor: \"#116EA5\",\n            pointColor: \"rgba(151,187,205,1)\",\n            pointStrokeColor: \"#fff\",\n            pointHighlightFill: \"#fff\",\n            pointHighlightStroke: \"rgba(151,187,205,1)\",\n            data: []\n          }\n        ]\n      }\n    };\n  }\n\n  async componentWillReceiveProps() {\n    const batchHistory = await getbatchAssetHistory(this.props.id);\n    this.getBatchData(batchHistory);\n  }\n\n  getBatchData(arr) {\n    const labelsAndData = {\n      labels: [],\n      data: []\n    };\n    arr.map(obj => {\n      labelsAndData.data.push(obj.quantity);\n      labelsAndData.labels.push(\n        new Date(obj.timestamp).toLocaleString(\"en-us\", { month: \"long\" })\n      );\n    });\n\n    this.setState({\n      data: {\n        labels: labelsAndData.labels,\n        datasets: [\n          {\n            label: \"Batch\",\n            fillColor: \"rgba(220,220,220,0)\",\n            strokeColor: \"#116EA5\",\n            pointColor: \"rgba(151,187,205,1)\",\n            pointStrokeColor: \"#fff\",\n            pointHighlightFill: \"#fff\",\n            pointHighlightStroke: \"rgba(151,187,205,1)\",\n            data: labelsAndData.data\n          }\n        ]\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Line\n          data={this.state.data}\n          options={{\n            responsive: true,\n            animationSteps: 100,\n            bezierCurve: false,\n            steppedLine: \"after\",\n            scaleShowGridLines: true,\n            scaleShowVerticalLines: true\n          }}\n          height=\"210\"\n          width=\"800\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default LineChart;\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Icon from \"@material-ui/core/Icon\";\n\nexport default class FormDialog extends Component {\n  state = {\n    open: false,\n    asset: {}\n  };\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      asset: nextProps.data\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.buttonType !== \"fab\" ? (\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={() => this.props.onClick()}\n          >\n            Open form dialog\n          </Button>\n        ) : (\n          <Fab\n            color=\"primary\"\n            size=\"small\"\n            onClick={() => this.props.onClick()}\n          >\n            <Icon>edit_icon</Icon>\n          </Fab>\n        )}\n\n        <Dialog\n          open={this.props.open}\n          onClose={() => this.props.onClick()}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">\n            You can change the details here\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>Edit the asset details here:</DialogContentText>\n            {this.props.fields.map((obj, i) => (\n              <TextField\n                margin=\"dense\"\n                key={i}\n                id={obj.label.toLowerCase()}\n                label={obj.label}\n                type={obj.type}\n                defaultValue={obj.value}\n                fullWidth\n                // onChange={obj.onChange()}\n                disabled={\n                  this.props.assetType === \"single\" && obj.type === \"number\"\n                }\n                onChange={e => obj.onChange(obj.label.toLowerCase(), e)}\n              />\n            ))}\n            {/* <TextField\n              margin=\"dense\"\n              id=\"status\"\n              label=\"Status\"\n              type=\"text\"\n              defaultValue={this.state.asset.status}\n              fullWidth\n              onChange={e => this.props.onChange(\"status\", e)}\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"desc\"\n              label=\"Description\"\n              type=\"text\"\n              defaultValue={this.state.asset.description}\n              fullWidth\n              onChange={e => this.props.onChange(\"description\", e)}\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"comment\"\n              label=\"Comment\"\n              type=\"text\"\n              defaultValue={this.state.asset.comment}\n              fullWidth\n              onChange={e => this.props.onChange(\"comment\", e)}\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"quantity\"\n              label=\"Quantity\"\n              type=\"text\"\n              defaultValue={this.state.asset.quantity}\n              fullWidth\n              onChange={e => this.props.onChange(\"quantity\", e)}\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"threshold\"\n              label=\"Threshold\"\n              type=\"text\"\n              defaultValue={this.state.asset.threshold}\n              fullWidth\n              onChange={e => this.props.onChange(\"threshold\", e)}\n            /> */}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => this.props.onClick()} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={() => this.props.onSubmit()} color=\"primary\">\n              Save\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport LineChart from \"./widgets/LineChart\";\nimport \"./asset.css\";\nimport { getAsset, getAssetHistory, updateAsset } from \"../services/data\";\nimport * as qs from \"query-string\";\nimport FormDialog from \"./widgets/Dialog\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { Icon } from \"@material-ui/core\";\nimport LoadingOverlay from \"react-loading-overlay\";\n\nclass Asset extends Component {\n  assetType;\n\n  constructor(props) {\n    super(props);\n    this.assetType = qs.parse(props.location.search).type;\n  }\n  state = {\n    assetHistory: [],\n    asset: {},\n    showDialog: false,\n    open: false,\n    active: true,\n    temp: {}\n  };\n\n  componentWillMount() {\n    this.getAssetsData();\n  }\n\n  async getAssetsData() {\n    const assetHistory = await getAssetHistory(this.props.match.params.id);\n    const asset = await getAsset(this.props.match.params.id);\n\n    this.setState({\n      assetHistory,\n      asset,\n      active: false\n    });\n  }\n\n  displayTransactions(asset, i) {\n    const date = (\n      new Date(asset.timestamp).getMonth() +\n      1 +\n      \"/\" +\n      new Date(asset.timestamp).getDate() +\n      \"/\" +\n      new Date(asset.timestamp).getFullYear()\n    ).toString();\n\n    if (asset[\"transactionType\"] === \"Increase in Inventory\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-success\">\n              Invenntory added on\n              {\" \" + date}\n            </span>\n          </p>\n          <p>\n            {\" \"}\n            Old Amount: <span className=\"field-warning\">\n              {asset.oldAmount}\n            </span>{\" \"}\n          </p>\n          <p>\n            New Amount: <span className=\"field-red\">{asset.amount}</span>{\" \"}\n          </p>\n          <hr />\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionType\"] === \"Asset Assignment\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-blue\">\n              Asset assignment changed on\n              {\" \" + date}\n            </span>\n          </p>\n          <hr />\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionType\"] === \"Update Comment\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-red\">\n              Comment updated on\n              {\" \" + date}\n            </span>\n          </p>\n          <hr />\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionType\"] === \"Update Location\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-warning\">\n              Location updated on\n              {\" \" + date}\n            </span>\n          </p>\n          <hr />\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionType\"] === \"Asset Removal\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-danger\">\n              Asset Removed on\n              {\" \" + date}\n            </span>\n          </p>\n          <hr />\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionType\"] === \"Asset Return\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-blue\">\n              Asset Returned on\n              {\" \" + date}\n            </span>\n          </p>\n          <hr />\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionType\"] === \"Decrease in Inventory\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-danger\">\n              Inventory decreased on\n              {\" \" + date}\n            </span>\n          </p>\n          <p>\n            {\" \"}\n            Old Amount: <span className=\"field-warning\">\n              {asset.oldAmount}\n            </span>{\" \"}\n          </p>\n          <p>\n            New Amount: <span className=\"field-red\">{asset.amount}</span>{\" \"}\n          </p>\n          <hr />\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionType\"] === \"Update Description\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            Description updated on\n            {\" \" + date + \" \"} from\n            <br />\n            <span className=\"field-warning\">{asset.newDescription}</span>\n            <span className=\"field-blue\">\n              <br /> to {asset.oldDescription}\n            </span>\n          </p>\n\n          <hr />\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionType\"] === \"Asset Creation\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-green\">\n              Asset was created on\n              {\" \" + date}\n            </span>\n          </p>\n          <hr />\n        </React.Fragment>\n      );\n    } else if (\n      asset[\"transactionType\"] ===\n      \"Asset Recreation, Restoration to Backup Point\"\n    ) {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-warning\">\n              Asset was re-created / restored on\n              {\" \" + date}\n            </span>\n          </p>\n\n          <hr />\n        </React.Fragment>\n      );\n    }\n  }\n\n  handleClickOpen = e => {\n    this.setState({ open: !this.state.open });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleDelete = val => {};\n\n  handleChange = (name, event) => {\n    this.setState({\n      temp: { ...this.state.temp, [name]: event.target.value }\n    });\n  };\n\n  handleSubmit = async () => {\n    this.setState({ active: true, open: false });\n    try {\n      const result = await updateAsset(\n        this.state.asset.assetId,\n        this.state.temp,\n        this.state.asset.quantity\n      );\n      if (result) {\n        this.getAssetsData();\n      }\n    } catch (ex) {\n      console.log(\"catch block\");\n      this.setState({ active: false });\n    }\n  };\n\n  render() {\n    return (\n      <LoadingOverlay\n        active={this.state.active}\n        // className=\"_loading_overlay_overlay\"\n        spinner\n        styles={{\n          spinner: base => ({\n            ...base,\n            width: \"100px\",\n            height: \"100px\",\n            top: \"-150px\",\n            \"& svg circle\": {\n              stroke: \"#0F6FA6\"\n            }\n          })\n        }}\n      >\n        <div className=\"asset-header b-raised my-card\">\n          <div className=\"row mt-25\">\n            <div className=\"col-8\">\n              <div className=\"d-flex\">\n                <h3>Asset {this.props.match.params.id}</h3>\n                {this.assetType !== \"Single\" ? (\n                  <div className=\"d-flex\">\n                    <div className=\"p-2 m-5 bg-success text-white\">\n                      <span className=\"m-5\"> Threshold</span>\n                      <span className=\"badge badge-dark\">\n                        {this.state.asset.threshold}\n                      </span>\n                    </div>\n                    <div className=\"p-2 m-5 bg-warning text-white\">\n                      <span className=\"m-5\"> Quantity</span>\n                      <span className=\"badge badge-dark\">\n                        {this.state.asset.quantity}\n                      </span>\n                    </div>\n                  </div>\n                ) : null}\n              </div>\n              <div className=\"my-card box-shadow\">\n                <span\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\"\n                  }}\n                >\n                  <h3>Details:</h3>\n                  <FormDialog\n                    open={this.state.open}\n                    onClick={this.handleClickOpen}\n                    buttonType={\"fab\"}\n                    asset={this.state.asset}\n                    onChange={this.handleChange}\n                    onSubmit={this.handleSubmit}\n                    assetType={this.state.asset.assetType}\n                    fields={[\n                      {\n                        type: \"text\",\n                        label: \"Description\",\n                        value: this.state.asset.description,\n                        onChange: this.handleChange\n                      },\n                      {\n                        type: \"text\",\n                        label: \"Status\",\n                        value: this.state.asset.status,\n                        onChange: this.handleChange\n                      },\n                      {\n                        type: \"text\",\n                        label: \"Comment\",\n                        value: this.state.asset.comment,\n                        onChange: this.handleChange\n                      },\n                      {\n                        type: \"number\",\n                        label: \"Quantity\",\n                        value: this.state.asset.quantity,\n                        onChange: this.handleChange\n                      },\n                      {\n                        type: \"number\",\n                        label: \"Threshold\",\n                        value: this.state.asset.threshold,\n                        onChange: this.handleChange\n                      }\n                    ]}\n                  />\n                </span>\n                <hr />\n                <h5>\n                  Description:\n                  <span className=\"details\">\n                    {this.state.asset.description}\n                  </span>\n                </h5>\n                <h5>\n                  Status:\n                  <span className=\"details\">{this.state.asset.status}</span>\n                </h5>\n                {this.state.asset.labels &&\n                  this.state.asset.labels.map(val => (\n                    <Chip\n                      key={val}\n                      deleteIcon={<Icon>cancel</Icon>}\n                      label={val}\n                      onDelete={this.handleDelete(val)}\n                    />\n                  ))}\n              </div>\n              <br />\n              {this.assetType !== \"Single\" ? (\n                <div className=\" my-card box-shadow\">\n                  <p className=\"box-heading\">Inventory OverTime</p>\n                  <hr />\n                  {/* <BarChart /> */}\n                  <LineChart id={this.props.match.params.id} />\n                </div>\n              ) : null}\n            </div>\n            <div\n              className={\n                \"col-4 my-card scroller-section\" +\n                (this.assetType !== \"Single\" && \"scroller-section\")\n              }\n            >\n              <p className=\"box-heading\">Transaction History</p>\n              <hr />\n              <div className=\"p-left-30 p-10\">\n                {this.state.assetHistory.map((obj, i) =>\n                  this.displayTransactions(obj, i)\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </LoadingOverlay>\n    );\n  }\n}\n\nexport default Asset;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nclass Navbar extends Component {\n  state = {};\n\n  logout() {\n    localStorage.removeItem(\"labId\");\n    window.location.reload();\n  }\n\n  render() {\n    const { pathname } = this.props.history.location;\n    return (\n      <div className=\"backgroung-img\">\n        <div className=\"d-flex\">\n          <Link\n            to={{\n              pathname: `/`\n            }}\n          >\n            <img\n              className=\"m-10\"\n              src={require(\"../assets/logo.jpg\")}\n              alt=\"logo\"\n              height=\"90\"\n            />\n          </Link>\n          {localStorage.getItem(\"labId\") && (\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              onClick={() => this.logout()}\n              style={{ height: \"35px\" }}\n            >\n              Logout\n            </Button>\n          )}\n        </div>\n\n        <div className=\"container p-0\">\n          {pathname === \"/\" && <h3 className=\"page-title\">DASHBOARD</h3>}\n          {pathname === \"/asset/:id\" && <h3 className=\"page-title\">ASSET</h3>}\n          {pathname === \"/assets\" && <h3 className=\"page-title\">ASSETS</h3>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Navbar);\n","import React from \"react\";\n\nconst Container = ({ children }) => {\n  return (\n    <div className=\"container body\">\n      <div className=\"main_container\">{children}</div>\n    </div>\n  );\n};\n\nexport default Container;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport \"./login.css\";\nimport { login } from \"../services/data\";\nimport LoadingOverlay from \"react-loading-overlay\";\n\nclass Login extends Component {\n  username = React.createRef();\n  password = React.createRef();\n  state = {\n    data: {\n      username: \"\",\n      password: \"\"\n    },\n    errors: {\n      username: \"\",\n      password: \"\"\n    },\n    active: false\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .label(\"Password\")\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem(\"labId\")) {\n      this.props.history.replace(\"/\");\n    }\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    const credentials = {\n      username: this.username.current.value,\n      password: this.password.current.value\n    };\n    this.setState({ active: true });\n\n    setTimeout(async () => {\n      try {\n        const res = await login(credentials);\n        if (res) {\n          this.props.history.replace(\"/\");\n        }\n      } catch (ex) {\n        if (ex.response && ex.response.status === 404) console.log(\"Error\");\n        this.setState({ active: false });\n      }\n    }, 3000);\n  }\n\n  render() {\n    return (\n      <LoadingOverlay\n        active={this.state.active}\n        // className=\"_loading_overlay_overlay\"\n        spinner\n        styles={{\n          spinner: base => ({\n            ...base,\n            width: \"100px\",\n            height: \"100px\",\n            top: \"-150px\",\n            \"& svg circle\": {\n              stroke: \"#0F6FA6\"\n            }\n          })\n        }}\n      >\n        <div className=\"card top-block-raised\">\n          <form className=\"card-body\" onSubmit={e => this.handleSubmit(e)}>\n            <h5 className=\"card-title\">Login</h5>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              ref={this.username}\n            />\n            <label htmlFor=\"password\">Password</label>\n            <input\n              className=\"form-control\"\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              ref={this.password}\n            />\n            <br />\n            <button type=\"submit\" className=\"btn btn-warning form-control\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </LoadingOverlay>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isLoggedIn } from \"../services/data\";\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (!isLoggedIn()) return <Redirect to=\"/login\" />;\n        return Component ? <Component {...props} /> : render;\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport Dashboard from \"./components/Dashboard\";\nimport Assets from \"./components/assets\";\nimport Asset from \"./components/asset\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\nimport Navbar from \"./components/navbar\";\nimport Container from \"./components/Container\";\nimport Login from \"./components/login\";\nimport ProtectedRoute from \"./components/protectedRoute\";\n\n// Using bootstrap, PrimeReact the UI libraries\nimport \"bootstrap/dist/css/bootstrap.css\";\n// import \"primereact/resources/themes/nova-light/theme.css\";\n// import \"primereact/resources/primereact.min.css\";\n// import \"primeicons/primeicons.css\";\n// Our styles\nimport \"./styles/custom.css\";\n\nReactDOM.render(\n  <HashRouter>\n    <div>\n      <Navbar />\n      <Container>\n        <Switch>\n          <ProtectedRoute path=\"/asset/:id\" component={Asset} />\n          <ProtectedRoute path=\"/assets\" component={Assets} />\n          <Route path=\"/login\" component={Login} />\n          <ProtectedRoute path=\"/\" component={Dashboard} />\n        </Switch>\n      </Container>\n    </div>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}