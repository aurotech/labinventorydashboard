{"version":3,"sources":["assets/logo.jpg","services/data.js","components/assets.jsx","components/widgets/util.jsx","components/widgets/DoughnutChart.js","components/Dashboard.jsx","components/widgets/LineChart.js","components/widgets/Dialog.jsx","components/transactions.jsx","components/asset.jsx","components/navbar.jsx","components/Container.jsx","components/widgets/input.jsx","components/login.jsx","components/widgets/form.jsx","components/protectedRoute.jsx","index.js"],"names":["module","exports","__webpack_require__","p","http","interceptors","request","use","config","headers","localStorage","getItem","error","Promise","reject","response","status","apiEndPoint","login","_x","_login","apply","this","arguments","_callee","credentials","result","regenerator_default","a","wrap","_context","prev","next","post","sent","data","setItem","token","toString","abrupt","stop","getAssets","_getAssets","_callee2","_ref","_context2","get","assets","t0","getbatchAssetHistory","_x2","_getbatchAssetHistory","_callee3","id","_ref2","_context3","qtyHistory","updateAsset","_x3","_x4","_x5","_updateAsset","_callee4","asset","amount","_context4","assetUpdateParameterGenrator","assetUpdater","editLabelsTransaction","_x6","_editLabelsTransaction","_callee5","obj","_context5","_callee6","arr","i","res","_context6","length","url","body","push","toast","success","field","toUpperCase","property","info","newAsset","oldAmount","Object","keys","map","key","slice","objKey","Math","abs","concat","defineProperty","getAsset","_x10","_getAsset","_callee7","_ref3","_context7","getAssetHistory","_x11","_getAssetHistory","_callee8","_context8","history","recentTransactions","_recentTransactions","_callee9","_ref4","_context9","Assets","state","assetHistory","getHistory","e","assetId","persist","_this","setState","show","target","props","react_default","createElement","Link","to","pathname","search","assetType","className","description","quantity","timeLastUpdated","tableClasses","scope","displayTableBody","Component","displayTransactions","undefined","date","timestamp","tempDate","Date","getMonth","getDate","getFullYear","dateCreator","Fragment","style","textAlign","marginBottom","background","user","oldLabels","label","index","newLabels","transactionType","newThreshold","oldThreshold","oldDescription","newDescription","oldLocation","newLocation","assignee","oldComment","newComment","DoughnutChart","chartPieces","nextProps","_this2","labels","count","color","randomColor","seed","luminosity","s","highlight","value","react_chartjs","options","title","display","text","legend","position","animationEasing","showTooltips","responsive","tooltipTitleFontColor","percentageInnerCutout","maintainAspectRatio","height","width","React","App","lowInventory","recents","singleAssets","batchAssets","active","batches","singles","filter","recent","forEach","checkLowInvenntory","LoadingOverlay_default","spinner","styles","base","objectSpread","top","& svg circle","stroke","widgets_DoughnutChart","batch","float","components_assets","LineChart","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","datasets","fillColor","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","batchHistory","getBatchData","labelsAndData","toLocaleString","month","animationSteps","bezierCurve","steppedLine","scaleShowGridLines","scaleShowVerticalLines","FormDialog","open","button","Dialog_default","onClose","onClick","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","fields","TextField_default","margin","toLowerCase","type","defaultValue","fullWidth","hidden","onChange","DialogActions_default","Button_default","onSubmit","submitButtonTitle","Transactions","maxHeight","overflowY","marginTop","zIndex","reverse","Asset","showDialog","forLabels","temp","tempLabel","anchorEl","handleClickOpen","handleClose","handleChange","name","event","handleSubmit","asyncToGenerator","mark","getAssetsData","qs","location","match","params","val","console","log","mode","oldAsset","JSON","parse","stringify","tempObj","splice","indexOf","warning","toConsumableArray","_this3","threshold","justifyContent","Dialog_FormDialog","index_es","size","generateFields","Chip_default","deleteIcon","onDelete","editLabels","openFormDialog","widgets_LineChart","transactions_Transactions","Navbar","handleClick","currentTarget","removeItem","window","reload","src","require","alt","aria-owns","aria-haspopup","Menu_default","Boolean","MenuItem_default","logout","withRouter","Container","children","Input","htmlFor","Login","username","password","errors","failed","schema","Joi","string","required","doSubmit","replace","renderInput","renderSubmitButton","validateProperty","validate","details","message","abortEarly","path","input","errorMsg","preventDefault","classes","widgets_input","genres","genre","g","_id","disabled","ProtectedRoute","component","render","rest","objectWithoutProperties","Route","assign","isLoggedIn","Redirect","ReactDOM","react","HashRouter","lib","navbar","components_Container","Switch","protectedRoute","Dashboard","document","getElementById"],"mappings":"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","file":"static/js/main.c8d8fc57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3bb01b46.jpg\";","import http from \"axios\";\nimport { toast } from \"react-toastify\";\n\nhttp.interceptors.request.use(\n  config => {\n    config.headers[\"X-Access-Token\"] = localStorage.getItem(\"labId\");\n    return config;\n  },\n  error => Promise.reject(error)\n);\n\nhttp.interceptors.response.use(null, error => {\n  if (\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status <= 500\n  ) {\n    return Promise.reject(error);\n  }\n});\nconst apiEndPoint = \"http://ec2-54-89-116-114.compute-1.amazonaws.com:\";\n\nexport function getToken() {\n  if (localStorage.getItem(\"labId\")) {\n    return localStorage.getItem(\"labId\");\n  }\n  return null;\n}\n\nexport function isLoggedIn() {\n  if (localStorage.getItem(\"labId\")) {\n    return true;\n  }\n}\n\nexport async function login(credentials) {\n  const result = await http.post(apiEndPoint + \"8080/login/\", credentials);\n\n  if (result.data) {\n    localStorage.setItem(\"labId\", result.data.token.toString());\n    return true;\n  }\n  return false;\n}\n\nexport async function getAssets() {\n  try {\n    const { data } = await http.get(apiEndPoint + \"8080/assets\");\n    return data.assets;\n  } catch (ex) {\n    return ex;\n  }\n}\n\nexport async function getbatchAssetHistory(id) {\n  try {\n    const { data } = await http.get(\n      apiEndPoint + \"8080/batchAssetQuantityHistory/\" + id\n    );\n    return data.qtyHistory;\n  } catch (ex) {\n    return ex;\n  }\n}\n\nexport async function updateAsset(id, asset, amount) {\n  const assets = assetUpdateParameterGenrator(id, asset, amount);\n  const i = 0;\n  try {\n    return await assetUpdater([], i, assets);\n  } catch (ex) {\n    return ex;\n  }\n}\n\nexport async function editLabelsTransaction(obj) {\n  // try {\n  //   const {data}= await http.post(\n  //     apiEndPoint + \"80/api/AssetEditLabelsTransaction/\",\n  //     obj\n  //   );\n  //   return data;\n  // } catch (ex) {\n  //   return ex;\n  // }\n\n  return await http.post(\n    apiEndPoint + \"80/api/AssetEditLabelsTransaction/\",\n    obj\n  );\n}\n\nasync function assetUpdater(arr, i, assets) {\n  while (i < assets.length) {\n    try {\n      let res = await http.post(assets[i].url, assets[i].body);\n      arr.push(res);\n      toast.success(\n        assets[i].field.toUpperCase() + \"  was updated successfully.\"\n      );\n    } catch (ex) {\n      toast.error(\"Unable update \" + assets[i].property + \".Pleasd try again.\");\n    }\n    i++;\n  }\n  toast.info(\"Updating transaction history\");\n\n  return arr;\n}\n\nfunction assetUpdateParameterGenrator(id, newAsset, oldAmount) {\n  const arr = [];\n  Object.keys(newAsset).map(key => {\n    let property = \"Edit\" + key[0].toUpperCase() + key.slice(1);\n    let objKey = \"new\" + key[0].toUpperCase() + key.slice(1);\n    let url = \"\";\n\n    if (key === \"status\") {\n      property = \"Move\";\n      objKey = \"newLocation\";\n    } else if (key === \"quantity\") {\n      if (newAsset[key] - oldAmount > 0) {\n        property = \"Addition\";\n        objKey = \"amount\";\n      } else {\n        property = \"Subtraction\";\n        objKey = \"amount\";\n      }\n      newAsset[key] = Math.abs(newAsset[key] - oldAmount);\n    }\n    url = `${apiEndPoint}80/api/Asset${property}Transaction`;\n    arr.push({\n      body: { asset: id, [objKey]: newAsset[key] },\n      url,\n      property,\n      field: key\n    });\n  });\n  return arr;\n}\n\nexport async function getAsset(id) {\n  try {\n    const { data } = await http.get(apiEndPoint + \"80/api/LabAsset/\" + id);\n\n    if (data) return data;\n    return [];\n  } catch (ex) {\n    return ex;\n  }\n}\n\nexport async function getAssetHistory(id) {\n  try {\n    const res = await http.get(apiEndPoint + \"8080/assetHistory/\" + id);\n    const { data } = res;\n\n    if (data && data.history) return data.history;\n    return [];\n  } catch (ex) {\n    return ex;\n  }\n}\n\nexport async function recentTransactions() {\n  try {\n    const { data } = await http.get(apiEndPoint + \"8080/recentTransactions/\");\n\n    if (data && data.history) return data.history;\n    return [];\n  } catch (ex) {\n    return ex;\n  }\n}\n","import React, { Component } from \"react\";\nimport { getAssets, getAssetHistory } from \"../services/data\";\nimport { Link } from \"react-router-dom\";\n\nclass Assets extends Component {\n  state = {\n    assets: [],\n    assetHistory: []\n  };\n\n  async componentWillMount() {\n    if (!this.props.assets) {\n      const assets = await getAssets();\n      // const assetHistory = await getAssetHistory(assetId);\n      this.setState({ assets });\n    }\n  }\n  getHistory = async (e, asset, assetId) => {\n    e.persist();\n\n    const assetHistory = await getAssetHistory(assetId);\n    if (assetHistory && this.state.assetHistory.length <= 1) {\n      this.setState({ assetHistory });\n      asset.show(e, e.target);\n    }\n  };\n\n  displayTableBody(assets) {\n    return assets.map((a, i) => (\n      <tr key={a.assetId}>\n        <td>\n          <Link\n            to={{\n              pathname: `/asset/${a.assetId}`,\n              search: `?type=${a.assetType}`,\n              state: a\n            }}\n            className=\"badge badge-secondary\"\n          >\n            {a.assetId}\n          </Link>\n        </td>\n        <td>{a.assetType}</td>\n        <td>\n          {/* {this.state.assetHistory.map((h, i) => (\n            <p key={i}>{h.description}</p>\n          ))} */}\n          {a.description}\n        </td>\n        <td>{a.quantity || 1}</td>\n        <td>{a.status}</td>\n        <td>{a.timeLastUpdated.slice(0, 10)}</td>\n      </tr>\n    ));\n  }\n\n  render() {\n    return (\n      <div className={this.props.tableClasses}>\n        <table\n          className={\n            \"rounded table tableFixHead table-striped\" +\n            (!this.props.tableClasses ? \" top-block-raised\" : \"\")\n          }\n        >\n          <thead>\n            <tr>\n              <th scope=\"col\">ID</th>\n              <th scope=\"col\">Type</th>\n              <th scope=\"col\">Description</th>\n              <th scope=\"col\">Quantity</th>\n              <th scope=\"col\">Location</th>\n              <th scope=\"col\">Last Updated</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.assets\n              ? this.displayTableBody(this.props.assets)\n              : this.displayTableBody(this.state.assets)}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Assets;\n","import { randomColor } from \"randomcolor\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport function dateCreator(timestamp) {\n  let tempDate = new Date(timestamp);\n\n  return (\n    (\"0\" + (tempDate.getMonth() + 1)).slice(-2) +\n    \"/\" +\n    (\"0\" + tempDate.getDate()).slice(-2) +\n    \"/\" +\n    tempDate.getFullYear()\n  );\n}\n\nexport function getColor(count, hue) {\n  const shade = [\n    \"#3366CC\",\n    \"#3366FF\",\n    \"#0066FF\",\n    \"#0066CC\",\n    \"#667099\",\n    \"#660066\",\n    \"#660033\",\n    \"#663300\",\n    \"#663333\",\n    \"#339900\",\n    \"#CC9900\",\n    \"#FFCC33\",\n    \"#FFC300\"\n  ];\n  // const hue = shade[Math.floor(Math.random() * shade.length)];\n  // console.log(hue);\n\n  return randomColor({\n    count,\n    seed: \"#009999\",\n    luminosity: \"bright\"\n  })[0];\n}\n\nexport function shadeChecker(clr1, clr2) {\n  if (clr1.slice(0, 3) !== clr2.slice(0, 3)) return true;\n  return false;\n}\n\nexport function displayTransactions(asset, i, assetId = \"null\") {\n  const date = dateCreator(asset.timestamp);\n\n  if (asset[\"transactionClass\"] === \"AssetEditLabelsTransaction\") {\n    return (\n      <React.Fragment key={i}>\n        <div\n          style={{\n            textAlign: \"center\",\n            marginBottom: \"10px\",\n            background: \"linearGradient(to right, red, yellow)\"\n          }}\n        >\n          Asset {\" -  \"}\n          <Link\n            to={{\n              pathname: `/asset/${asset.assetId ? asset.assetId : assetId}`,\n              search: `?type=${asset.assetType}`,\n              state: asset\n            }}\n            className=\"field-purple\"\n          >\n            {asset.assetId ? asset.assetId : assetId}\n          </Link>\n          <hr />\n        </div>\n\n        <span className=\"m-5 \">\n          <span className=\"field-blue\">Labels were updated</span> on\n          {\" \" + date} by{\" \"}\n          <span className=\"field-blue mb-10\">{\" \" + asset.user}</span>\n        </span>\n        <span />\n        <span className=\"d-block\">\n          {asset.oldLabels.length > 0 && \"Old Labels: \"}\n          {asset.oldLabels.length > 0 &&\n            asset.oldLabels.map((label, index) => (\n              <span key={index}>{\" \" + label + \", \"}</span>\n            ))}\n        </span>\n        <span className=\"d-block\">\n          {asset.newLabels.length > 0 && \"New Labels:\"}\n          {asset.newLabels.length > 0 &&\n            asset.newLabels.map((label, index) => (\n              <span key={index}>{\" \" + label + \" \"}</span>\n            ))}\n        </span>\n      </React.Fragment>\n    );\n  } else if (asset[\"transactionClass\"] === \"AssetAdditionTransaction\") {\n    return (\n      <React.Fragment key={i}>\n        <div\n          style={{\n            textAlign: \"center\",\n            marginBottom: \"10px\",\n            background: \"linearGradient(to right, red, yellow)\"\n          }}\n        >\n          Asset {\" -  \"}\n          <Link\n            to={{\n              pathname: `/asset/${asset.assetId ? asset.assetId : assetId}`,\n              search: `?type=${asset.assetType}`,\n              state: asset\n            }}\n            className=\"field-purple\"\n          >\n            {asset.assetId ? asset.assetId : assetId}\n          </Link>\n          <hr />\n        </div>\n\n        <span className=\"m-5 \">\n          <span className=\"field-green\">{asset.transactionType} on</span>\n          {\" \" + date} by{\" \"}\n          <span className=\"field-blue mb-10\">{\" \" + asset.user}</span>\n        </span>\n        <span />\n        <span className=\"d-block\">\n          Old Amount:\n          {\" \" + asset.oldAmount}\n        </span>\n        <span className=\"d-block\">\n          New Amount:\n          {\" \" + asset.amount}\n        </span>\n      </React.Fragment>\n    );\n  } else if (asset[\"transactionClass\"] === \"AssetSubtractionTransaction\") {\n    return (\n      <React.Fragment key={i}>\n        <div\n          style={{\n            textAlign: \"center\",\n            marginBottom: \"10px\",\n            background: \"linearGradient(to right, red, yellow)\"\n          }}\n        >\n          Asset {\" -  \"}\n          <Link\n            to={{\n              pathname: `/asset/${asset.assetId ? asset.assetId : assetId}`,\n              search: `?type=${asset.assetType}`,\n              state: asset\n            }}\n            className=\"field-purple\"\n          >\n            {asset.assetId ? asset.assetId : assetId}\n          </Link>\n          <hr />\n        </div>\n\n        <span className=\"m-5 \">\n          <span className=\"field-warning\">{asset.transactionType} on</span>\n          {\" \" + date} by{\" \"}\n          <span className=\"field-blue mb-10\">{\" \" + asset.user}</span>\n        </span>\n        <span />\n        <span className=\"d-block\">\n          Old Amount:\n          {\" \" + asset.oldAmount}\n        </span>\n        <span className=\"d-block\">\n          New Amount:\n          {\" \" + asset.amount}\n        </span>\n      </React.Fragment>\n    );\n  } else if (asset[\"transactionClass\"] === \"AssetCreateTransaction\") {\n    return (\n      <React.Fragment key={i}>\n        <div\n          style={{\n            textAlign: \"center\",\n            marginBottom: \"10px\",\n            background: \"linearGradient(to right, red, yellow)\"\n          }}\n        >\n          Asset {\" -  \"}\n          <Link\n            to={{\n              pathname: `/asset/${asset.assetId ? asset.assetId : assetId}`,\n              search: `?type=${asset.assetType}`,\n              state: asset\n            }}\n            className=\"field-purple\"\n          >\n            {asset.assetId ? asset.assetId : assetId}\n          </Link>\n          <hr />\n        </div>\n\n        <span className=\"m-5 \">\n          <span className=\"field-green\">A new Asset was created</span> on{\" \"}\n          {\" \" + date} by{\" \"}\n          <span className=\"field-blue mb-10\">{\" \" + asset.user}</span>\n        </span>\n        <span />\n        <span className=\"d-block\">\n          Asset Type:\n          {\" \" + asset.assetType}\n        </span>\n        <span className=\"d-block\">\n          Asset Description:\n          {\" \" + asset.description}\n        </span>\n      </React.Fragment>\n    );\n  } else if (asset[\"transactionClass\"] === \"AssetEditThresholdTransaction\") {\n    return (\n      <React.Fragment key={i}>\n        <div\n          style={{\n            textAlign: \"center\",\n            marginBottom: \"10px\",\n            background: \"linearGradient(to right, red, yellow)\"\n          }}\n        >\n          Asset {\" -  \"}\n          <Link\n            to={{\n              pathname: `/asset/${asset.assetId ? asset.assetId : assetId}`,\n              search: `?type=${asset.assetType}`,\n              state: asset\n            }}\n            className=\"field-purple\"\n          >\n            {asset.assetId ? asset.assetId : assetId}\n          </Link>\n          <hr />\n        </div>\n\n        <span className=\"m-5 \">\n          <span className=\"field-red\">Low inventory update</span>\n          {\" \" + date} by{\" \"}\n          <span className=\"field-blue mb-10\">{\" \" + asset.user}</span>\n        </span>\n        <span />\n        <span className=\"d-block\">\n          Threshold:\n          {asset.newThreshold}\n        </span>\n        <span className=\"d-block\">\n          Actual Amount:\n          {asset.oldThreshold}\n        </span>\n      </React.Fragment>\n    );\n  } else if (asset[\"transactionClass\"] === \"AssetEditDescriptionTransaction\") {\n    return (\n      <React.Fragment key={i}>\n        <span>\n          <div\n            style={{\n              textAlign: \"center\",\n              marginBottom: \"10px\",\n              background: \"linearGradient(to right, red, yellow)\"\n            }}\n          >\n            Asset {\" -  \"}\n            <Link\n              to={{\n                pathname: `/asset/${asset.assetId ? asset.assetId : assetId}`,\n                search: `?type=${asset.assetType}`,\n                state: asset\n              }}\n              className=\"field-purple\"\n            >\n              {asset.assetId ? asset.assetId : assetId}\n            </Link>\n            <hr />\n          </div>\n          <span className=\"field-warning\">Asset's Description was updated</span>{\" \"}\n          on {\" \" + date} by{\" \"}\n          <span className=\"field-blue mb-10\">{\" \" + asset.user}</span>\n        </span>\n        <span />\n\n        <span className=\"d-block\">\n          Old Description:\n          {asset.oldDescription}\n        </span>\n        <span className=\"d-block\">\n          New Description:\n          {asset.newDescription}\n        </span>\n      </React.Fragment>\n    );\n  } else if (asset[\"transactionClass\"] === \"AssetMoveTransaction\") {\n    return (\n      <React.Fragment key={i}>\n        <div\n          style={{\n            textAlign: \"center\",\n            marginBottom: \"10px\",\n            background: \"linearGradient(to right, red, yellow)\"\n          }}\n        >\n          Asset {\" -  \"}\n          <Link\n            to={{\n              pathname: `/asset/${asset.assetId ? asset.assetId : assetId}`,\n              search: `?type=${asset.assetType}`,\n              state: asset\n            }}\n            className=\"field-purple\"\n          >\n            {asset.assetId ? asset.assetId : assetId}\n          </Link>\n          <hr />\n        </div>\n\n        <span className=\"m-5 \">\n          <span className=\"field-blue\">Asset's Location was updated</span> on{\" \"}\n          {\" \" + date} by{\" \"}\n          <span className=\"field-blue mb-10\">{\" \" + asset.user}</span>\n        </span>\n        <span />\n        <span className=\"d-block\">\n          Old Location:\n          {asset.oldLocation}\n        </span>\n        <span className=\"d-block\">\n          New Location:\n          {asset.newLocation}\n        </span>\n      </React.Fragment>\n    );\n  } else if (asset[\"transactionClass\"] === \"AssetUndoRemoveTransaction\") {\n    return (\n      <React.Fragment key={i}>\n        <div\n          style={{\n            textAlign: \"center\",\n            marginBottom: \"10px\",\n            background: \"linearGradient(to right, red, yellow)\"\n          }}\n        >\n          Asset {\" -  \"}\n          <Link\n            to={{\n              pathname: `/asset/${asset.assetId ? asset.assetId : assetId}`,\n              search: `?type=${asset.assetType}`,\n              state: asset\n            }}\n            className=\"field-purple\"\n          >\n            {asset.assetId ? asset.assetId : assetId}\n          </Link>\n          <hr />\n        </div>\n\n        <span className=\"m-5 \">\n          <span className=\"field-blue\"> Updated on asset</span> on {\" \" + date}{\" \"}\n          by <span className=\"field-blue mb-10\">{\" \" + asset.user}</span>\n        </span>\n        <span />\n        <span className=\"d-block\">\n          Old Location:\n          {asset.oldLocation}\n        </span>\n        <span className=\"d-block\">\n          New Location:\n          {asset.newLocation}\n        </span>\n      </React.Fragment>\n    );\n  } else if (asset[\"transactionClass\"] === \"AssetAssignTransaction\") {\n    return (\n      <React.Fragment key={i}>\n        <span\n          style={{\n            textAlign: \"center\",\n            marginBottom:\n              \"10px, background: 'linearGradient(to right, red, yellow)'\"\n          }}\n        >\n          <div>\n            Asset {\" -  \"}\n            <Link\n              to={{\n                pathname: `/asset/${asset.assetId ? asset.assetId : assetId}`,\n                search: `?type=${asset.assetType}`,\n                state: asset\n              }}\n              className=\"field-purple\"\n            >\n              {asset.assetId ? asset.assetId : assetId}\n            </Link>\n          </div>\n          <hr />\n        </span>\n        <span className=\"m-5 \">\n          <span className=\"field-green\"> Asset was assigned</span> to{\" \"}\n          {\" \" + asset.assignee} on\n          {\" \" + date} by{\" \"}\n          <span className=\"field-blue mb-10\">{\" \" + asset.user}</span>\n        </span>\n      </React.Fragment>\n    );\n  } else if (asset[\"transactionClass\"] === \"AssetEditCommentTransaction\") {\n    return (\n      <React.Fragment key={i}>\n        <div\n          style={{\n            textAlign: \"center\",\n            marginBottom: \"10px\",\n            background: \"linearGradient(to right, red, yellow)\"\n          }}\n        >\n          Asset {\" -  \"}\n          <Link\n            to={{\n              pathname: `/asset/${asset.assetId ? asset.assetId : assetId}`,\n              search: `?type=${asset.assetType}`,\n              state: asset\n            }}\n            className=\"field-purple\"\n          >\n            {asset.assetId ? asset.assetId : assetId}\n          </Link>\n          <hr />\n        </div>\n\n        <span className=\"m-5 \">\n          <span className=\"field-warning\">\n            {\" \"}\n            Comments were updated on {\" \" + date} by{\" \"}\n            <span className=\"field-blue mb-10\">{\" \" + asset.user}</span>\n          </span>\n        </span>\n        <span className=\"d-block\">Old Comment: {\" \" + asset.oldComment}</span>\n        <span className=\"d-block\">New Comment: {\" \" + asset.newComment}</span>\n      </React.Fragment>\n    );\n  }\n  // return <p>{JSON.stringify(asset)}</p>;\n}\n","import React from \"react\";\nimport { Doughnut } from \"react-chartjs\";\nimport { getColor } from \"./util\";\n\nclass DoughnutChart extends React.Component {\n  chartPieces = {};\n  state = {\n    data: []\n  };\n\n  componentDidUpdate(nextProps) {\n    if (this.props.assets) {\n      this.chartPieces[\"other\"] = 0;\n\n      this.props.assets.map(asset => {\n        if (asset.labels.length) {\n          if (asset.labels[0] in this.chartPieces) {\n            this.chartPieces[asset.labels[0]] += 1;\n          } else {\n            this.chartPieces[asset.labels[0]] = 1;\n          }\n        } else {\n          this.chartPieces[\"other\"] += 1;\n        }\n      });\n    }\n    let arr = [];\n\n    for (let key in this.chartPieces) {\n      let color = getColor(1, \"yellow\");\n      const s = {\n        color: color,\n        highlight: color,\n        value: this.chartPieces[key],\n        label: key\n      };\n      arr.push(s);\n    }\n    if (arr.length > 0) {\n      if (!this.state.data.length) {\n        this.setState({ data: arr });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.data.length > 0 && (\n          <Doughnut\n            data={this.state.data}\n            options={{\n              title: {\n                display: true,\n                text: \"Single Asset Division\"\n              },\n              legend: {\n                display: true,\n                position: \"top\"\n              },\n              animationEasing: \"easeInSine\",\n              showTooltips: true,\n              responsive: true,\n              tooltipTitleFontColor: \"#000\",\n              percentageInnerCutout: 40,\n              maintainAspectRatio: false\n            }}\n            height=\"220\"\n            width=\"120\"\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default DoughnutChart;\n","import React, { Component } from \"react\";\nimport \"./dashboard.css\";\n// Componnents\nimport Assets from \"./assets\";\nimport DoughnutChart from \"./widgets/DoughnutChart\";\nimport { getAssets, recentTransactions } from \"../services/data\";\nimport { Link } from \"react-router-dom\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { displayTransactions } from \"./widgets/util\";\n// REACT TOASTIFY\n\nclass App extends Component {\n  state = {\n    assets: [],\n    lowInventory: [],\n    recents: [],\n    singleAssets: [],\n    batchAssets: [],\n    active: true\n  };\n\n  async componentWillMount() {\n    try {\n      const assets = await getAssets();\n      const recents = await recentTransactions();\n      let batches = [];\n      let singles = [];\n      assets.filter(a => {\n        a.assetType === \"Batch\" ? batches.push(a) : singles.push(a);\n      });\n      if (recents && assets) {\n        recents.map(recent => {\n          assets.forEach(a => {\n            if (a.assetId === recent.assetId) {\n              recent[\"assetType\"] = a.assetType;\n            }\n          });\n        });\n      }\n      this.setState({\n        assets,\n        recents,\n        singleAssets: singles,\n        batchAssets: batches,\n        active: false\n      });\n      this.checkLowInvenntory();\n    } catch (ex) {\n      this.setState({\n        active: false\n      });\n    }\n  }\n\n  checkLowInvenntory() {\n    const lowInventory = [];\n    this.state.assets.map(a => {\n      if (a[\"quantity\"] < a[\"threshold\"]) {\n        lowInventory.push(a);\n        this.setState({ lowInventory });\n      }\n      return;\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <LoadingOverlay\n          active={this.state.active}\n          className=\"_loading_overlay_overlay\"\n          spinner\n          styles={{\n            spinner: base => ({\n              ...base,\n              width: \"100px\",\n              height: \"100px\",\n              top: \"-150px\",\n              \"& svg circle\": {\n                stroke: \"#0F6FA6\"\n              }\n            })\n          }}\n        >\n          <div className=\"row top-block-raised sec-batch-scroll\">\n            <div className=\"col-9 my-card\">\n              <div className=\"row\">\n                <div className=\"col-6 data-block my-card\">\n                  <p className=\"box-heading\">Total Single Assets</p>\n                  <h3>\n                    {this.state.assets.length - this.state.batchAssets.length}\n                  </h3>\n\n                  {this.state.assets && (\n                    <DoughnutChart assets={this.state.singleAssets} />\n                  )}\n                </div>\n                <div className=\"col-6 data-block my-card\">\n                  <p className=\"box-heading\">Total Batch Assets</p>\n                  {this.state.batchAssets && (\n                    <h3>{this.state.batchAssets.length}</h3>\n                  )}\n                  <DoughnutChart assets={this.state.batchAssets} batch={true} />\n                </div>\n\n                <div className=\"data-block\">\n                  <div className=\"pull-right\">\n                    <Link\n                      className=\"btn btn-warning btn-sm\"\n                      style={{ float: \"right\" }}\n                      to=\"/assets\"\n                    >\n                      Show More\n                    </Link>\n                  </div>\n                  <h4 style={{ textAlign: \"left\" }}>\n                    Total Items: {this.state.assets.length}\n                  </h4>\n                  <Assets\n                    tableClasses=\"table-scroll\"\n                    assets={this.state.assets}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-3 row-itmes-flex my-card no-left-border scroll-card\">\n              <div className=\"inventory-update\">\n                <h6\n                  style={{ textAlign: \"left\" }}\n                  className=\"label-fixed mt-0 card-filled\"\n                >\n                  Low Inventory Items:{\" \"}\n                  <span className=\"badge badge-dark\">\n                    {this.state.lowInventory.length}\n                  </span>\n                </h6>\n\n                <ul className=\"list-group\">\n                  {this.state.lowInventory.map((a, i) => (\n                    <li className=\"list-group-item\" key={i}>\n                      <span className=\"field-red\">{a.assetId}</span> is low on\n                      inventory. Only {a.quantity} left.\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              <div className=\"inventory-transactions \">\n                <br />\n                <h6 style={{ textAlign: \"left\" }} className=\"card-filled\">\n                  Latest Transactions:{\" \"}\n                  <span className=\"badge badge-dark\">\n                    {this.state.recents.length}\n                  </span>\n                </h6>\n                {this.state.recents.map((a, i) => (\n                  <ul className=\"list-group\" key={i}>\n                    <li className=\"list-group-item\">\n                      {displayTransactions(a, i)}\n                    </li>\n                    <br />\n                  </ul>\n                ))}\n              </div>\n            </div>\n          </div>\n        </LoadingOverlay>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport { Line } from \"react-chartjs\";\nimport { getbatchAssetHistory } from \"../../services/data\";\n\nclass LineChart extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: {\n        labels: [],\n        datasets: [\n          {\n            label: \"Batch\",\n            fillColor: \"rgba(220,220,220,0)\",\n            strokeColor: \"#116EA5\",\n            pointColor: \"rgba(151,187,205,1)\",\n            pointStrokeColor: \"#fff\",\n            pointHighlightFill: \"#fff\",\n            pointHighlightStroke: \"rgba(151,187,205,1)\",\n            data: []\n          }\n        ]\n      }\n    };\n  }\n\n  async componentWillReceiveProps() {\n    const batchHistory = await getbatchAssetHistory(this.props.id);\n    this.getBatchData(batchHistory);\n  }\n\n  getBatchData(arr) {\n    const labelsAndData = {\n      labels: [],\n      data: []\n    };\n    arr.map(obj => {\n      labelsAndData.data.push(obj.quantity);\n      labelsAndData.labels.push(\n        new Date(obj.timestamp).toLocaleString(\"en-us\", { month: \"long\" })\n      );\n    });\n\n    this.setState({\n      data: {\n        labels: labelsAndData.labels,\n        datasets: [\n          {\n            label: \"Batch\",\n            fillColor: \"rgba(220,220,220,0)\",\n            strokeColor: \"#116EA5\",\n            pointColor: \"rgba(151,187,205,1)\",\n            pointStrokeColor: \"#fff\",\n            pointHighlightFill: \"#fff\",\n            pointHighlightStroke: \"rgba(151,187,205,1)\",\n            data: labelsAndData.data\n          }\n        ]\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Line\n          data={this.state.data}\n          options={{\n            responsive: true,\n            animationSteps: 100,\n            bezierCurve: false,\n            steppedLine: \"after\",\n            scaleShowGridLines: true,\n            scaleShowVerticalLines: true\n          }}\n          height=\"210\"\n          width=\"800\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default LineChart;\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default class FormDialog extends Component {\n  state = {\n    open: false,\n    asset: {}\n  };\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      asset: nextProps.data\n    });\n  }\n\n  render() {\n    return (\n      <div style={this.props.styles}>\n        {this.props.button}\n\n        <Dialog\n          open={this.props.open}\n          onClose={() => this.props.onClick()}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">{this.props.title}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>Edit the asset details here:</DialogContentText>\n            {this.props.fields.map((obj, i) => (\n              <TextField\n                margin=\"dense\"\n                key={i}\n                id={obj.label.toLowerCase()}\n                label={obj.label}\n                type={obj.type}\n                defaultValue={obj.value}\n                fullWidth\n                hidden={\n                  this.props.assetType === \"single\" && obj.type === \"number\"\n                }\n                onChange={e => obj.onChange(obj.label.toLowerCase(), e)}\n              />\n            ))}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => this.props.onClick()} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={() => this.props.onSubmit()} color=\"primary\">\n              {this.props.submitButtonTitle\n                ? this.props.submitButtonTitle\n                : \"Save\"}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { displayTransactions } from \"./widgets/util\";\n\nexport const Transactions = props => {\n  return (\n    <div\n      className=\"col-4\"\n      style={{\n        maxHeight: \"inherit\",\n        overflowY: \"scroll\",\n        position: \"relative\",\n        marginTop: \"60px\"\n      }}\n    >\n      <div\n        style={{\n          position: \"fixed\",\n          top: \"157px\",\n          width: \"27%\",\n          zIndex: \"2000\"\n        }}\n      >\n        <h6 className=\"card-filled\">Transaction History</h6>\n        <hr />\n      </div>\n\n      <div style={{ position: \"absolute\", top: \"5px\" }}>\n        {props.data.reverse().map((a, i) => (\n          <ul className=\"list-group\" key={i}>\n            <li className=\"list-group-item\">\n              {displayTransactions(a, i, props.assetId)}\n            </li>\n            <br />\n          </ul>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport LineChart from \"./widgets/LineChart\";\nimport \"./asset.css\";\nimport * as qs from \"query-string\";\nimport FormDialog from \"./widgets/Dialog\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { Icon, Fab } from \"@material-ui/core\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { toast } from \"react-toastify\";\nimport { Transactions } from \"./transactions\";\nimport Button from \"@material-ui/core/Button\";\n\nimport {\n  getAsset,\n  getAssetHistory,\n  updateAsset,\n  editLabelsTransaction\n} from \"../services/data\";\n\nclass Asset extends Component {\n  assetType;\n\n  constructor(props) {\n    super(props);\n    this.assetType = qs.parse(props.location.search).type;\n  }\n  state = {\n    assetHistory: [],\n    asset: {},\n    showDialog: false,\n    open: false,\n    forLabels: false,\n    active: true,\n    temp: {},\n    tempLabel: \"\",\n    anchorEl: null\n  };\n\n  componentWillMount() {\n    this.getAssetsData();\n  }\n\n  async getAssetsData() {\n    const assetHistory = await getAssetHistory(this.props.match.params.id);\n    const asset = await getAsset(this.props.match.params.id);\n\n    this.setState({\n      assetHistory,\n      asset,\n      active: false\n    });\n  }\n\n  handleClickOpen = e => {\n    this.setState({ open: !this.state.open });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false, forLabels: false });\n  };\n\n  openFormDialog() {\n    this.setState({ forLabels: !this.state.forLabels });\n  }\n\n  handleDelete(val) {\n    console.log(val);\n  }\n\n  handleChange = (name, event) => {\n    const { temp } = this.state;\n    temp[name] = event.target.value;\n    this.setState({ temp });\n  };\n\n  handleSubmit = async () => {\n    if (Object.keys(this.state.temp).length > 0) {\n      this.setState({ active: true, open: false });\n\n      try {\n        const result = await updateAsset(\n          this.state.asset.assetId,\n          this.state.temp,\n          this.state.asset.quantity\n        );\n        if (result) {\n          this.getAssetsData();\n          this.setState({ temp: {} });\n        }\n      } catch (ex) {\n        this.setState({ active: false });\n      }\n    } else {\n      this.setState({ open: false });\n    }\n  };\n\n  async editLabels(asset, mode) {\n    // console.clear();\n    let { labels, assetId } = asset;\n    let tempLabel = this.state.temp.label;\n    let oldAsset = JSON.parse(JSON.stringify(asset));\n    const tempObj = { asset: assetId };\n\n    if (mode === \"delete\") {\n      labels.splice(labels.indexOf(tempLabel), 1);\n      tempObj[\"newLabels\"] = JSON.stringify(labels);\n      asset.labels = labels;\n      this.setState({ asset });\n\n      try {\n        const result = await editLabelsTransaction(tempObj);\n        if (result) {\n          toast.warning(\n            `${tempLabel} was removed sucessfully from asset's labels`\n          );\n          this.getAssetsData();\n        }\n      } catch (ex) {\n        this.setState({ asset: oldAsset });\n        toast.error(\"Something went wrong. Please try again later.\");\n      }\n    } else {\n      if (this.state.temp.label) {\n        tempObj[\"newLabels\"] = JSON.stringify([\n          ...labels,\n          this.state.temp.label\n        ]);\n        asset.labels.push(tempLabel);\n        this.setState({ forLabels: !this.state.forLabels, asset });\n        try {\n          const result = await editLabelsTransaction(tempObj);\n          if (result)\n            toast.success(\"Label: \" + tempLabel + \" was added successfully\");\n          this.getAssetsData();\n        } catch (ex) {\n          toast.error(\"Something went wrong. Please try again later.\");\n        }\n      }\n    }\n  }\n\n  generateFields(arr) {\n    return arr.map(label => {\n      return {\n        type: label === \"quantity\" || label === \"threshold\" ? \"number\" : \"text\",\n        label: label[0].toUpperCase() + label.slice(1),\n        value: this.state.asset[label],\n        onChange: this.handleChange\n      };\n    });\n  }\n\n  render() {\n    return (\n      <LoadingOverlay\n        active={this.state.active}\n        // className=\"_loading_overlay_overlay\"\n        spinner\n        styles={{\n          spinner: base => ({\n            ...base,\n            width: \"100px\",\n            height: \"100px\",\n            top: \"-150px\",\n            \"& svg circle\": {\n              stroke: \"#0F6FA6\"\n            }\n          })\n        }}\n      >\n        <div className=\"asset-header b-raised my-card\">\n          <div\n            className={\n              \"row mt-25 \" +\n              (this.assetType === \"Batch\" ? \"sec-batch-scroll\" : \"sec-scroll\")\n            }\n          >\n            <div className=\"col-8\">\n              <div className=\"d-flex\">\n                <h3>Asset {this.props.match.params.id}</h3>\n                {this.assetType !== \"Single\" ? (\n                  <div className=\"d-flex\">\n                    <div className=\"p-2 m-5 bg-success text-white\">\n                      <span className=\"m-5\"> Threshold</span>\n                      <span className=\"badge badge-dark\">\n                        {this.state.asset.threshold}\n                      </span>\n                    </div>\n                    <div className=\"p-2 m-5 bg-warning text-white\">\n                      <span className=\"m-5\"> Quantity</span>\n                      <span className=\"badge badge-dark\">\n                        {this.state.asset.quantity}\n                      </span>\n                    </div>\n                  </div>\n                ) : null}\n              </div>\n              <div className=\"my-card box-shadow\">\n                <span\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\"\n                  }}\n                >\n                  <h3>Details:</h3>\n                  <FormDialog\n                    // ASSET DETTAILS EDIT DIALOG\n                    open={this.state.open}\n                    onClick={() => this.handleClickOpen()}\n                    button={\n                      <Fab\n                        color=\"primary\"\n                        size=\"small\"\n                        onClick={() => this.handleClickOpen()}\n                      >\n                        <Icon>edit_icon</Icon>\n                      </Fab>\n                    }\n                    asset={this.state.asset}\n                    onChange={this.handleChange}\n                    onSubmit={this.handleSubmit}\n                    assetType={this.state.asset.assetType}\n                    title={\"You can change the details here\"}\n                    fields={this.generateFields([\n                      \"description\",\n                      \"status\",\n                      \"comment\",\n                      \"quantity\",\n                      \"threshold\"\n                    ])}\n                  />\n                </span>\n                <hr />\n                {this.state.asset.description && (\n                  <div>\n                    <h5>\n                      Description:\n                      <span className=\"details\">\n                        {\" \" + this.state.asset.description}\n                      </span>\n                    </h5>\n                    <h5>\n                      Status:\n                      <span className=\"details\">\n                        {\" \" + this.state.asset.status}\n                      </span>\n                    </h5>\n                  </div>\n                )}\n                {this.state.asset.labels &&\n                  this.state.asset.labels.map(val => (\n                    <Chip\n                      key={val}\n                      deleteIcon={<Icon>cancel</Icon>}\n                      label={val}\n                      onDelete={() =>\n                        this.editLabels(this.state.asset, \"delete\")\n                      }\n                    />\n                  ))}\n                <FormDialog\n                  // FORM LABELS EDIT DIALOG\n                  styles={{ display: \"inline\" }}\n                  open={this.state.forLabels}\n                  onClick={() => this.openFormDialog()}\n                  button={\n                    <Chip\n                      label={<Icon color=\"action\">add_circle</Icon>}\n                      onClick={() => this.openFormDialog()}\n                    />\n                  }\n                  asset={this.state.asset}\n                  onChange={this.handleChange}\n                  submitButtonTitle={\"Add\"}\n                  onSubmit={() => this.editLabels(this.state.asset)}\n                  assetType={this.state.asset.assetType}\n                  title={\"Add another label\"}\n                  fields={[\n                    {\n                      type: \"text\",\n                      label: \"Label\",\n                      onChange: this.handleChange\n                    }\n                  ]}\n                />\n              </div>\n              <br />\n              {this.assetType !== \"Single\" ? (\n                <div className=\" my-card box-shadow\">\n                  <p className=\"box-heading\">Inventory OverTime</p>\n                  <hr />\n                  {/* <BarChart /> */}\n                  <LineChart id={this.props.match.params.id} />\n                </div>\n              ) : null}\n            </div>\n\n            <Transactions\n              data={this.state.assetHistory}\n              assetId={this.state.asset.assetId}\n            />\n          </div>\n          {/* <Button onClick={() => this.handleOpen()}>Open Modal</Button> */}\n        </div>\n      </LoadingOverlay>\n    );\n  }\n}\n\nexport default Asset;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { toast } from \"react-toastify\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nclass Navbar extends Component {\n  state = {\n    anchorEl: null\n  };\n\n  logout() {\n    localStorage.removeItem(\"labId\");\n    toast.success(\"Logout Successful\");\n    window.location.reload();\n  }\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n\n    const { pathname } = this.props.history.location;\n    return (\n      <div className=\"backgroung-img\">\n        <div className=\"d-flex\">\n          <Link\n            to={{\n              pathname: `/`\n            }}\n          >\n            <img\n              className=\"m-10\"\n              src={require(\"../assets/logo.jpg\")}\n              alt=\"logo\"\n              height=\"90\"\n            />\n          </Link>\n          {localStorage.getItem(\"labId\") && (\n            // <Button\n            //   variant=\"contained\"\n            //   color=\"default\"\n            //   onClick={() => this.logout()}\n            //   style={{ height: \"35px\" }}\n            // >\n            //   Logout\n            // </Button>\n            <div style={{ height: \"35px\" }}>\n              <Button\n                aria-owns={anchorEl ? \"simple-menu\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={this.handleClick}\n              >\n                Menu\n              </Button>\n              <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={this.handleClose}\n              >\n                <MenuItem onClick={() => this.logout()}>Logout</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </div>\n\n        <div className=\"container p-0\">\n          {pathname === \"/\" && <h3 className=\"page-title\">DASHBOARD</h3>}\n          {pathname === \"/asset/:id\" && <h3 className=\"page-title\">ASSET</h3>}\n          {pathname === \"/assets\" && <h3 className=\"page-title\">ASSETS</h3>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Navbar);\n","import React from \"react\";\n\nconst Container = ({ children }) => {\n  return (\n    <div className=\"container body\">\n      <div className=\"main_container\">{children}</div>\n    </div>\n  );\n};\n\nexport default Container;\n","import React from \"react\";\n\nconst Input = ({ name, type, label, value, onChange, error }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        value={value}\n        type={type}\n        className=\"form-control\"\n        id={name}\n        name={name}\n        onChange={onChange}\n      />\n\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport \"./login.css\";\nimport { login } from \"../services/data\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport Form from \"./widgets/form\";\nimport { toast } from \"react-toastify\";\n\nclass Login extends Form {\n  state = {\n    data: {\n      username: \"\",\n      password: \"\"\n    },\n    errors: {\n      username: \"\",\n      password: \"\"\n    },\n    failed: false,\n    active: false\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .label(\"Password\")\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem(\"labId\")) {\n      this.props.history.replace(\"/\");\n    }\n  }\n\n  doSubmit = async () => {\n    try {\n      const res = await login(this.state.data);\n      if (res) {\n        this.props.history.replace(\"/\");\n        toast.success(\n          \"Logged in successfully as \" + this.state.data.username.toUpperCase()\n        );\n      }\n    } catch (ex) {\n      toast.error(\"Login failed\");\n      this.setState({ failed: true, active: false });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <LoadingOverlay\n          active={this.state.active}\n          spinner\n          styles={{\n            spinner: base => ({\n              ...base,\n              width: \"100px\",\n              height: \"100px\",\n              top: \"-150px\",\n              \"& svg circle\": {\n                stroke: \"#0F6FA6\"\n              }\n            })\n          }}\n        >\n          <div className=\"card top-block-raised\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Login</h5>\n              {this.state.failed && (\n                <div className=\"alert alert-danger\">\n                  {\" \"}\n                  Username/Password do not match.\n                </div>\n              )}\n              <form>\n                {this.renderInput(\"Username\", \"username\", \"form-control\")}\n                {this.renderInput(\"Password\", \"password\", \"password\")}\n                {this.renderSubmitButton(\n                  \"Submit\",\n                  \"btn btn-warning form-control\"\n                )}\n              </form>\n            </div>\n          </div>\n        </LoadingOverlay>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {}\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  validate = () => {\n    const result = Joi.validate(this.state.data, this.schema, {\n      abortEarly: false\n    });\n    if (!result.error) return null;\n    const errors = {};\n    result.error.details.map(obj => {\n      errors[obj.path[0]] = obj.message;\n    });\n    return errors;\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMsg = this.validateProperty(input);\n    if (errorMsg) errors[input.name] = errorMsg;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors, failed: false });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const errors = this.validate() || \"\";\n\n    this.setState({ errors });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  renderInput(label, name, type = \"text\", classes) {\n    return (\n      <Input\n        label={label}\n        name={name}\n        type={type}\n        value={this.state.data[name]}\n        error={this.state.errors[name]}\n        onChange={this.handleChange}\n        classes={classes}\n      />\n    );\n  }\n\n  renderSelectInput(label, name, genres) {\n    return (\n      <div>\n        <div className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <label className=\"input-group-text\" htmlFor={name}>\n              {label}\n            </label>\n          </div>\n          <select\n            className=\"custom-select\"\n            id={name}\n            onChange={this.handleChange}\n            name={name}\n            value={this.state.data.genre}\n          >\n            <option value=\"\">Select a Genre</option>\n            {genres.map(g => {\n              return (\n                <option key={g._id} value={g._id}>\n                  {g.name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        {this.state.errors[name] && (\n          <div className=\"alert alert-danger\">{this.state.errors[name]}</div>\n        )}\n      </div>\n    );\n  }\n\n  renderSubmitButton(label, classes) {\n    return (\n      <button\n        disabled={this.validate()}\n        type=\"submit\"\n        onClick={this.handleSubmit}\n        className={classes}\n      >\n        {label}\n      </button>\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isLoggedIn } from \"../services/data\";\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (!isLoggedIn()) return <Redirect to=\"/login\" />;\n        return Component ? <Component {...props} /> : render;\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport Dashboard from \"./components/Dashboard\";\nimport Assets from \"./components/assets\";\nimport Asset from \"./components/asset\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\nimport Navbar from \"./components/navbar\";\nimport Container from \"./components/Container\";\nimport Login from \"./components/login\";\nimport ProtectedRoute from \"./components/protectedRoute\";\n\n// Using bootstrap, PrimeReact the UI libraries\nimport \"bootstrap/dist/css/bootstrap.css\";\n// import \"primereact/resources/themes/nova-light/theme.css\";\n// import \"primereact/resources/primereact.min.css\";\n// import \"primeicons/primeicons.css\";\n// Our styles\nimport \"./styles/custom.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nReactDOM.render(\n  <HashRouter>\n    <React.Fragment>\n      <ToastContainer />\n\n      <Navbar />\n      <Container>\n        <Switch>\n          <ProtectedRoute path=\"/asset/:id\" component={Asset} />\n          <ProtectedRoute path=\"/assets\" component={Assets} />\n          <Route path=\"/login\" component={Login} />\n          <ProtectedRoute path=\"/\" component={Dashboard} />\n        </Switch>\n      </Container>\n    </React.Fragment>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}