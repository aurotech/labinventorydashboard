{"version":3,"sources":["assets/logo.jpg","services/data.js","components/assets.jsx","components/widgets/DoughnutChart.js","components/Dashboard.jsx","components/widgets/LineChart.js","components/asset.jsx","components/navbar.jsx","components/Container.jsx","components/login.jsx","index.js"],"names":["module","exports","__webpack_require__","p","http","interceptors","request","use","config","url","includes","localStorage","getItem","headers","window","location","error","Promise","reject","response","status","apiEndPoint","getAssets","_getAssets","apply","this","arguments","_callee","_ref","data","regenerator_default","a","wrap","_context","prev","next","get","sent","abrupt","assets","stop","getAssetHistory","_x","_getAssetHistory","_callee2","id","_ref2","_context2","history","recentTransactions","_recentTransactions","_callee3","_ref3","_context3","signIn","_x2","_signIn","_callee4","credentials","_ref4","_context4","post","Assets","state","assetHistory","trigger","display","getHistory","e","asset","assetId","persist","_this","length","setState","show","target","onLeave","el","hide","props","map","i","react_default","createElement","key","Link","to","pathname","concat","search","assetType","className","description","quantity","timeLastUpdated","tableClasses","scope","displayTableBody","Component","DoughnutChart","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","slice","nextProps","_this2","labels","label","arr","color","Math","random","toString","s","highlight","value","push","react_chartjs","options","title","text","legend","position","animationEasing","showTooltips","responsive","tooltipTitleFontColor","percentageInnerCutout","maintainAspectRatio","height","width","React","App","lowInventory","recents","batchAssets","batches","filter","checkLowInvenntory","date","Date","timestamp","getDate","getMonth","getFullYear","Fragment","oldLabels","l","newLabels","transactionType","oldAmount","amount","newThreshold","oldThreshold","user","oldDescription","newDescription","oldLocation","newLocation","assignee","_this3","widgets_DoughnutChart","style","float","textAlign","components_assets","onMouse","onMouseEvent","displayTransactions","LineChart","datasets","fillColor","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","animationSteps","bezierCurve","Asset","qs","type","match","params","console","log","widgets_LineChart","obj","Navbar","path","src","require","alt","Container","children","Login","username","createRef","password","errors","schema","Joi","string","required","preventDefault","c","current","res","token","setItem","replace","t0","onSubmit","handleSubmit","htmlFor","name","ref","ReactDOM","react","BrowserRouter","navbar","components_Container","Switch","Route","component","Dashboard","document","getElementById"],"mappings":"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","file":"static/js/main.ff786962.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3bb01b46.jpg\";","import http from \"axios\";\n\nhttp.interceptors.request.use(\n  config => {\n    if (!config.url.includes(\"login\")) {\n      if (localStorage.getItem(\"labId\")) {\n        config.headers[\"X-Access-Token\"] = localStorage.getItem(\"labId\");\n      } else {\n        window.location = \"/login\";\n      }\n    }\n    return config;\n  },\n  error => Promise.reject(error)\n);\n\nhttp.interceptors.response.use(null, error => {\n  if (\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status <= 500\n  ) {\n    return Promise.reject(error);\n  }\n});\n\nconst apiEndPoint = \"http://ec2-54-89-116-114.compute-1.amazonaws.com:8000\";\n\nexport async function getAssets() {\n  const { data } = await http.get(apiEndPoint + \"/assets\");\n  return data.assets;\n}\nexport async function getAssetHistory(id) {\n  const { data } = await http.get(apiEndPoint + \"/assetHistory/\" + id);\n\n  if (data && data.history) return data.history;\n  return [];\n}\n\nexport async function recentTransactions() {\n  const { data } = await http.get(apiEndPoint + \"/recentTransactions/\");\n\n  if (data && data.history) return data.history;\n  return [];\n}\n\nexport async function signIn(credentials) {\n  const { data } = await http.post(apiEndPoint + \"/login/\", credentials);\n  if (data) return data;\n  return [];\n}\n","import React, { Component } from \"react\";\nimport { getAssets, getAssetHistory } from \"../services/data\";\nimport { Link } from \"react-router-dom\";\n\nclass Assets extends Component {\n  state = {\n    assets: [],\n    assetHistory: []\n  };\n\n  trigger = { display: \"none\" };\n  async componentWillMount() {\n    if (!this.props.assets) {\n      const assets = await getAssets();\n      // const assetHistory = await getAssetHistory(assetId);\n      this.setState({ assets });\n    }\n  }\n  getHistory = async (e, asset, assetId) => {\n    e.persist();\n\n    const assetHistory = await getAssetHistory(assetId);\n    if (assetHistory && this.state.assetHistory.length <= 1) {\n      this.setState({ assetHistory });\n      asset.show(e, e.target);\n    }\n  };\n\n  onLeave = el => {\n    el.hide();\n    this.setState({ assetHistory: [] });\n  };\n\n  displayTableBody(assets) {\n    return assets.map((a, i) => (\n      <tr key={a.assetId}>\n        <td>\n          <Link\n            to={{\n              pathname: `/asset/${a.assetId}`,\n              search: `?type=${a.assetType}`,\n              state: a\n            }}\n            className=\"badge badge-secondary\"\n          >\n            {a.assetId}\n          </Link>\n        </td>\n        <td>{a.assetType}</td>\n        <td>\n          {/* {this.state.assetHistory.map((h, i) => (\n            <p key={i}>{h.description}</p>\n          ))} */}\n          {a.description}\n        </td>\n        <td>{a.quantity || 1}</td>\n        <td>{a.status}</td>\n        <td>{a.timeLastUpdated}</td>\n        <td>{a.timeLastUpdated}</td>\n      </tr>\n    ));\n  }\n\n  render() {\n    return (\n      <div className={this.props.tableClasses}>\n        <table\n          className={\n            \"table table-striped\" +\n            (!this.props.tableClasses ? \" top-block-raised\" : \"\")\n          }\n        >\n          <thead>\n            <tr>\n              <th scope=\"col\">Asset ID</th>\n              <th scope=\"col\">Asset Type</th>\n              <th scope=\"col\">Description</th>\n              <th scope=\"col\">Quantity</th>\n              <th scope=\"col\">Location</th>\n              <th scope=\"col\">Time Last Scanned</th>\n              <th scope=\"col\">Time Last Updated</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.assets\n              ? this.displayTableBody(this.props.assets)\n              : this.displayTableBody(this.state.assets)}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Assets;\n","import React from \"react\";\nimport { Doughnut } from \"react-chartjs\";\n\nclass DoughnutChart extends React.Component {\n  slice = {};\n  state = {\n    data: []\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      data: []\n    };\n  }\n\n  componentWillUpdate(nextProps) {\n    if (this.props.assets === nextProps.assets) {\n      this.props.assets.map(asset => {\n        asset.labels.map(label => {\n          label in this.slice\n            ? (this.slice[label] += 1)\n            : (this.slice[label] = 1);\n        });\n      });\n    }\n    let arr = [];\n    for (let key in this.slice) {\n      const color = \"#\" + ((Math.random() * 0xff0000) << 0).toString(16);\n      const s = {\n        color,\n        highlight: color,\n        value: this.slice[key],\n        label: key\n      };\n      arr.push(s);\n    }\n    if (arr.length > 0) {\n      if (!this.state.data.length) {\n        this.setState({ data: arr });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Doughnut\n          data={this.state.data}\n          options={{\n            title: {\n              display: true,\n              text: \"Single Asset Division\"\n            },\n            legend: {\n              display: true,\n              position: \"top\"\n            },\n            animationEasing: \"easeInSine\",\n            showTooltips: true,\n            responsive: true,\n            tooltipTitleFontColor: \"#000\",\n            percentageInnerCutout: 40,\n            maintainAspectRatio: false\n          }}\n          height=\"220\"\n          width=\"120\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default DoughnutChart;\n","import React, { Component } from \"react\";\nimport \"./dashboard.css\";\n// Componnents\nimport Assets from \"./assets\";\nimport DoughnutChart from \"./widgets/DoughnutChart\";\nimport { getAssets, recentTransactions } from \"../services/data\";\nimport { Link } from \"react-router-dom\";\n\nclass App extends Component {\n  state = {\n    assets: [],\n    lowInventory: [],\n    recents: [],\n    batchAssets: []\n  };\n\n  async componentWillMount() {\n    const assets = await getAssets();\n    const recents = await recentTransactions();\n    const batches = [];\n    assets.filter(a => {\n      if (a.assetType === \"Batch\") {\n        batches.push(a);\n      }\n    });\n    this.setState({ assets, recents, batchAssets: batches });\n    this.checkLowInvenntory();\n  }\n\n  displayTransactions(asset, i) {\n    const date = (\n      new Date(asset.timestamp).getDate() +\n      \"/\" +\n      (new Date(asset.timestamp).getMonth() + 1) +\n      \"/\" +\n      new Date(asset.timestamp).getFullYear()\n    ).toString();\n\n    if (asset[\"transactionClass\"] === \"AssetEditLabelsTransaction\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-blue\">Labels were updated</span> on\n            {\" \" + date}\n          </p>\n          <p>\n            {asset.oldLabels.length > 0 && \"Old Labels:\"}\n            {asset.oldLabels.length > 0 &&\n              asset.oldLabels.map((l, i) => (\n                <span key={i}>{\" \" + l + \", \"}</span>\n              ))}\n          </p>\n          <p>\n            {asset.newLabels.length > 0 && \"New Labels:\"}\n            {asset.newLabels.length > 0 &&\n              asset.newLabels.map((l, i) => (\n                <span key={i}>{\" \" + l + \" \"}</span>\n              ))}\n          </p>\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionClass\"] === \"AssetAdditionTransaction\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-green\">{asset.transactionType}</span>\n            {\" \" + date}\n          </p>\n          <p>\n            Old Amount:\n            {asset.oldAmount}\n          </p>\n          <p>\n            New Amount:\n            {asset.amount}\n          </p>\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionClass\"] === \"AssetSubtractionTransaction\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-warning\">{asset.transactionType}</span>\n            {\" \" + date}\n          </p>\n          <p>\n            Old Amount:\n            {asset.oldAmount}\n          </p>\n          <p>\n            New Amount:\n            {asset.amount}\n          </p>\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionClass\"] === \"AssetCreateTransaction\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-green\">A new Asset was created</span> on{\" \"}\n            {\" \" + date}\n          </p>\n          <p>\n            Asset Type:\n            {asset.assetType}\n          </p>\n          <p>\n            Asset Description:\n            {asset.description}\n          </p>\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionClass\"] === \"AssetEditThresholdTransaction\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-blue\">{asset.transactionType}</span>\n            {\" \" + date}\n          </p>\n          <p>\n            Threshold:\n            {asset.newThreshold}\n          </p>\n          <p>\n            Actual Amount:\n            {asset.oldThreshold}\n          </p>\n        </React.Fragment>\n      );\n    } else if (\n      asset[\"transactionClass\"] === \"AssetEditDescriptionTransaction\"\n    ) {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-warning\">\n              Asset's Description was updated\n            </span>{\" \"}\n            on {\" \" + date} by {\" \" + asset.user}\n          </p>\n          <p>\n            Old Description:\n            {asset.oldDescription}\n          </p>\n          <p>\n            New Description:\n            {asset.newDescription}\n          </p>\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionClass\"] === \"AssetMoveTransaction\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-blue\">Asset's Location was updated</span> on{\" \"}\n            {\" \" + date} by {\" \" + asset.user}\n          </p>\n          <p>\n            Old Location:\n            {asset.oldLocation}\n          </p>\n          <p>\n            New Location:\n            {asset.newLocation}\n          </p>\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionClass\"] === \"AssetUndoRemoveTransaction\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-blue\"> Updated on asset</span> on{\" \"}\n            {\" \" + date} by {\" \" + asset.user}\n          </p>\n          <p>\n            Old Location:\n            {asset.oldLocation}\n          </p>\n          <p>\n            New Location:\n            {asset.newLocation}\n          </p>\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionClass\"] === \"AssetAssignTransaction\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            <span className=\"field-green\"> Asset was assigned</span> to{\" \"}\n            {\" \" + asset.assignee} on\n            {\" \" + date}\n          </p>\n        </React.Fragment>\n      );\n    }\n    // return <p>{JSON.stringify(asset)}</p>;\n  }\n\n  checkLowInvenntory() {\n    const lowInventory = [];\n    this.state.assets.map(a => {\n      if (a[\"quantity\"] < a[\"threshold\"]) {\n        lowInventory.push(a);\n        this.setState({ lowInventory });\n      }\n      return;\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"row top-block-raised\">\n          <div className=\"col-9 my-card\">\n            <div className=\"row\">\n              <div className=\"col-6 data-block my-card\">\n                <p className=\"box-heading\">Total Single Assets</p>\n                <h3>{this.state.assets.length}</h3>\n\n                <DoughnutChart assets={this.state.assets} />\n              </div>\n              <div className=\"col-6 data-block my-card\">\n                <p className=\"box-heading\">Total Batch Assets</p>\n                <h3>{this.state.batchAssets.length}</h3>\n\n                <DoughnutChart assets={this.state.batchAssets} />\n              </div>\n\n              <div className=\"data-block\">\n                <div className=\"pull-right\">\n                  <Link\n                    className=\"btn btn-warning btn-sm\"\n                    style={{ float: \"right\" }}\n                    to=\"/assets\"\n                  >\n                    Show More\n                  </Link>\n                </div>\n                <h4 style={{ textAlign: \"left\" }}>\n                  Total Items: {this.state.assets.length}\n                </h4>\n                <Assets\n                  tableClasses=\"table-scroll\"\n                  onMouse={this.onMouseEvent}\n                  assets={this.state.assets}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-3 row-itmes-flex my-card no-left-border\">\n            <div className=\"inventory-update\">\n              <h6\n                style={{ textAlign: \"left\" }}\n                className=\"label-fixed mt-0 card-filled\"\n              >\n                Low Inventory Items:{\" \"}\n                <span className=\"badge badge-dark\">\n                  {this.state.lowInventory.length}\n                </span>\n              </h6>\n\n              <ul className=\"list-group\">\n                {this.state.lowInventory.map((a, i) => (\n                  <li className=\"list-group-item\" key={i}>\n                    <span className=\"field-red\">{a.assetId}</span> is low on\n                    inventory. Only {a.quantity} left.\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <div className=\"inventory-transactions\">\n              <br />\n              <h6 style={{ textAlign: \"left\" }} className=\"card-filled\">\n                Latest Transactions:{\" \"}\n                <span className=\"badge badge-dark\">\n                  {this.state.recents.length}\n                </span>\n              </h6>\n              {this.state.recents.map((a, i) => (\n                <ul className=\"list-group\" key={i}>\n                  <li className=\"list-group-item\">\n                    {this.displayTransactions(a, i)}\n                  </li>\n                  <br />\n                </ul>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport { Line } from \"react-chartjs\";\n\nclass LineChart extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: {\n        labels: [\"10\", \"20\", \"30\", \"40\", \"50\", \"60\", \"70\"],\n        datasets: [\n          {\n            label: \"Batch\",\n            fillColor: \"rgba(220,220,220,0)\",\n            strokeColor: \"#116EA5\",\n            pointColor: \"rgba(151,187,205,1)\",\n            pointStrokeColor: \"#fff\",\n            pointHighlightFill: \"#fff\",\n            pointHighlightStroke: \"rgba(151,187,205,1)\",\n            data: [10, 55, 49, 45, 57, 68, 94]\n          }\n        ]\n      }\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div>\n        <Line\n          data={this.state.data}\n          options={{\n            responsive: true,\n            animationSteps: 100,\n            bezierCurve: false\n          }}\n          height=\"210\"\n          width=\"800\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default LineChart;\n","import React, { Component } from \"react\";\nimport LineChart from \"./widgets/LineChart\";\nimport \"./asset.css\";\nimport { getAssetHistory } from \"../services/data\";\nimport * as qs from \"query-string\";\n\nclass Asset extends Component {\n  assetType;\n  constructor(props) {\n    super(props);\n    this.assetType = qs.parse(props.location.search).type;\n  }\n  state = {\n    assetHistory: [],\n    asset: {}\n  };\n\n  async componentWillMount() {\n    const assetHistory = await getAssetHistory(this.props.match.params.id);\n\n    console.log(this.props.location);\n    this.setState({ assetHistory, asset: this.props.location.state });\n  }\n\n  displayTransactions(asset, i) {\n    const date = (\n      new Date(asset.timestamp).getDate() +\n      \"/\" +\n      (new Date(asset.timestamp).getMonth() + 1) +\n      \"/\" +\n      new Date(asset.timestamp).getFullYear()\n    ).toString();\n\n    if (asset[\"transactionType\"] === \"Increase in Inventory\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            Invenntory added on\n            {\" \" + date}\n          </p>\n          <p>Old Amount: {asset.oldAmount}</p>\n          <p>New Amount: {asset.quantity}</p>\n          <hr />\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionType\"] === \"Asset Assignment\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            Invenntory added on\n            {\" \" + date}\n          </p>\n          <p>Old Amount: {asset.oldAmount}</p>\n          <p>New Amount: {asset.quantity}</p>\n          <hr />\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionType\"] === \"Update Comment\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            Invenntory added on\n            {\" \" + date}\n          </p>\n          <p>Old Amount: {asset.oldAmount}</p>\n          <p>New Amount: {asset.quantity}</p>\n          <hr />\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionType\"] === \"Update Location\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            Invenntory added on\n            {\" \" + date}\n          </p>\n          <p>Old Amount: {asset.oldAmount}</p>\n          <p>New Amount: {asset.quantity}</p>\n          <hr />\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionType\"] === \"Asset Removal\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            Invenntory added on\n            {\" \" + date}\n          </p>\n          <p>Old Amount: {asset.oldAmount}</p>\n          <p>New Amount: {asset.quantity}</p>\n          <hr />\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionType\"] === \"Asset Return\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            Inventory added on\n            {\" \" + date}\n          </p>\n          <p>Old Amount: {asset.oldAmount}</p>\n          <p>New Amount: {asset.quantity}</p>\n          <hr />\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionType\"] === \"Decrease in Inventory\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            Inventory added on\n            {\" \" + date}\n          </p>\n          <p>Old Amount: {asset.oldAmount}</p>\n          <p>New Amount: {asset.quantity}</p>\n          <hr />\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionType\"] === \"Update Description\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            Description was on\n            {\" \" + date} from {asset.newDescription} to {asset.oldDescription}\n          </p>\n\n          <hr />\n        </React.Fragment>\n      );\n    } else if (asset[\"transactionType\"] === \"Asset Creation\") {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            Asset was created on\n            {\" \" + date}\n          </p>\n          <hr />\n        </React.Fragment>\n      );\n    } else if (\n      asset[\"transactionType\"] ===\n      \"Asset Recreation, Restoration to Backup Point\"\n    ) {\n      return (\n        <React.Fragment key={i}>\n          <p>\n            Asset was re-created / restored on\n            {\" \" + date}\n          </p>\n\n          <hr />\n        </React.Fragment>\n      );\n    }\n    // return <p>{JSON.stringify(asset)}</p>;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"asset-header b-raised my-card\">\n          <h3>Asset {this.props.match.params.id}</h3>\n          <div className=\"row mt-25\">\n            <div className=\"col-8\">\n              {this.assetType === \"Single\" ? (\n                <div className=\"my-card box-shadow\">\n                  <h3>Details:</h3>\n                  <hr />\n                  <h5>Description: {this.state.asset.description}</h5>\n                  <h5>Status: {this.state.asset.status}</h5>\n                </div>\n              ) : (\n                <div>\n                  <div className=\"my-card box-shadow\">\n                    <h3>Details:</h3>\n                    <hr />\n                    <h5>Description: {this.state.asset.description}</h5>\n                    <h5>Status: {this.state.asset.status}</h5>\n                  </div>\n                  <br />\n                  <div className=\" my-card box-shadow\">\n                    <p className=\"box-heading\">Inventory OverTime</p>\n                    <hr />\n                    {/* <BarChart /> */}\n                    <LineChart />\n                  </div>\n                </div>\n              )}\n              <div className=\"box-shadow mt-25\">\n                <div className=\"border-gray p-left-30 p-10\">\n                  <p className=\"box-heading\">Add Labels Here</p>\n                  <hr />\n                  LABELS\n                  <br />\n                  DESCRIPTION\n                  <br />\n                  COMMENTS\n                  <br />\n                  ETC\n                  <br />\n                  SET THRESHOLD\n                </div>\n              </div>\n            </div>\n            <div\n              className={\n                \"col-4 my-card \" +\n                (this.assetType !== \"Single\" && \"scroller-section\")\n              }\n            >\n              <p className=\"box-heading\">Transaction History</p>\n              <hr />\n              <div className=\"p-left-30 p-10\">\n                {this.state.assetHistory.map((obj, i) =>\n                  this.displayTransactions(obj, i)\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Asset;\n","import React, { Component } from \"react\";\n\nclass Navbar extends Component {\n  state = {};\n\n  render() {\n    const path = window.location.pathname;\n    return (\n      <div className=\"backgroung-img\">\n        <img\n          className=\"m-10\"\n          src={require(\"../assets/logo.jpg\")}\n          alt=\"logo\"\n          height=\"90\"\n        />\n        <div className=\"container p-0\">\n          {path === \"/\" && <h3 className=\"page-title\">DASHBOARD</h3>}\n          {path === \"/asset/:id\" && <h3 className=\"page-title\">ASSET</h3>}\n          {path === \"/assets\" && <h3 className=\"page-title\">ASSETS</h3>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nconst Container = ({ children }) => {\n  return (\n    <div className=\"container body\">\n      <div className=\"main_container\">{children}</div>\n    </div>\n  );\n};\n\nexport default Container;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport \"./login.css\";\nimport { signIn } from \"../services/data\";\n\nclass Login extends Component {\n  username = React.createRef();\n  password = React.createRef();\n  state = {\n    data: {\n      username: \"\",\n      password: \"\"\n    },\n    errors: {\n      username: \"\",\n      password: \"\"\n    }\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .label(\"Password\")\n  };\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    const c = {\n      username: this.username.current.value,\n      password: this.password.current.value\n    };\n    try {\n      const res = await signIn(c);\n      if (res && res.token) {\n        console.log(res);\n        const { token } = res;\n        localStorage.setItem(\"labId\", token.toString());\n        this.props.history.replace(\"/\");\n      }\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) console.log(\"Error\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"card top-block-raised\">\n        <form className=\"card-body\" onSubmit={e => this.handleSubmit(e)}>\n          <h5 className=\"card-title\">Login</h5>\n          <label htmlFor=\"username\">Username</label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"username\"\n            id=\"username\"\n            ref={this.username}\n          />\n          <label htmlFor=\"password\">Password</label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"password\"\n            id=\"password\"\n            ref={this.password}\n          />\n          <br />\n          <button type=\"submit\" className=\"btn btn-warning form-control\">\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport Dashboard from \"./components/Dashboard\";\nimport Assets from \"./components/assets\";\nimport Asset from \"./components/asset\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/navbar\";\nimport Container from \"./components/Container\";\n// Using bootstrap, PrimeReact the UI libraries\nimport \"bootstrap/dist/css/bootstrap.css\";\n// import \"primereact/resources/themes/nova-light/theme.css\";\n// import \"primereact/resources/primereact.min.css\";\n// import \"primeicons/primeicons.css\";\n// Our styles\nimport \"./styles/custom.css\";\nimport Login from \"./components/login\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <div>\n      <Navbar />\n      <Container>\n        <Switch>\n          <Route path=\"/asset/:id\" component={Asset} />\n          <Route path=\"/assets\" component={Assets} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/\" component={Dashboard} />\n        </Switch>\n      </Container>\n    </div>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}